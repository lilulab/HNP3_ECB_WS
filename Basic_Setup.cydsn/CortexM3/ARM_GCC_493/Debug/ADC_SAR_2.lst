ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"ADC_SAR_2.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.ADC_SAR_2_CalcGain,"ax",%progbits
  19              		.align	2
  20              		.thumb
  21              		.thumb_func
  22              		.type	ADC_SAR_2_CalcGain, %function
  23              	ADC_SAR_2_CalcGain:
  24              	.LFB12:
  25              		.file 1 ".\\Generated_Source\\PSoC5\\ADC_SAR_2.c"
   1:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * File Name: ADC_SAR_2.c
   3:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Version 3.0
   4:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
   5:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Description:
   6:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  This file provides the source code to the API for the Successive
   7:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  approximation ADC Component.
   8:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
   9:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Note:
  10:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
  11:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
  18:.\Generated_Source\PSoC5/ADC_SAR_2.c **** #include "CyLib.h"
  19:.\Generated_Source\PSoC5/ADC_SAR_2.c **** #include "ADC_SAR_2.h"
  20:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
  21:.\Generated_Source\PSoC5/ADC_SAR_2.c **** #if(ADC_SAR_2_DEFAULT_INTERNAL_CLK)
  22:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #include "ADC_SAR_2_theACLK.h"
  23:.\Generated_Source\PSoC5/ADC_SAR_2.c **** #endif /* End ADC_SAR_2_DEFAULT_INTERNAL_CLK */
  24:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
  25:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
  26:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /***************************************
  27:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Forward function references
  28:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ***************************************/
  29:.\Generated_Source\PSoC5/ADC_SAR_2.c **** static void ADC_SAR_2_CalcGain(uint8 resolution);
  30:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
  31:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
  32:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /***************************************
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 2


  33:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Global data allocation
  34:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ***************************************/
  35:.\Generated_Source\PSoC5/ADC_SAR_2.c **** uint8 ADC_SAR_2_initVar = 0u;
  36:.\Generated_Source\PSoC5/ADC_SAR_2.c **** volatile int16 ADC_SAR_2_offset;
  37:.\Generated_Source\PSoC5/ADC_SAR_2.c **** volatile int16 ADC_SAR_2_countsPerVolt;     /* Obsolete Gain compensation */
  38:.\Generated_Source\PSoC5/ADC_SAR_2.c **** volatile int32 ADC_SAR_2_countsPer10Volt;   /* Gain compensation */
  39:.\Generated_Source\PSoC5/ADC_SAR_2.c **** volatile int16 ADC_SAR_2_shift;
  40:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
  41:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
  42:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /*******************************************************************************
  43:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Function Name: ADC_SAR_2_Start
  44:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ********************************************************************************
  45:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
  46:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Summary:
  47:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  This is the preferred method to begin component operation.
  48:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_Start() sets the initVar variable, calls the
  49:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_Init() function, and then calls the
  50:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_Enable() function.
  51:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
  52:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Parameters:
  53:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  None.
  54:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
  55:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Return:
  56:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  None.
  57:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
  58:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Global variables:
  59:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  The ADC_SAR_2_initVar variable is used to indicate when/if initial
  60:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  configuration of this component has happened. The variable is initialized to
  61:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  62:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  63:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_Start() routine.
  64:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  If re-initialization of the component is required the variable should be set
  65:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  to zero before call of ADC_SAR_2_Start() routine, or the user may call
  66:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_Init() and ADC_SAR_2_Enable() as done in the
  67:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_Start() routine.
  68:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
  69:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Side Effect:
  70:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  If the initVar variable is already set, this function only calls the
  71:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_Enable() function.
  72:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
  73:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *******************************************************************************/
  74:.\Generated_Source\PSoC5/ADC_SAR_2.c **** void ADC_SAR_2_Start(void)
  75:.\Generated_Source\PSoC5/ADC_SAR_2.c **** {
  76:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
  77:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* If not Initialized then initialize all required hardware and software */
  78:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     if(ADC_SAR_2_initVar == 0u)
  79:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     {
  80:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         ADC_SAR_2_Init();
  81:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         ADC_SAR_2_initVar = 1u;
  82:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     }
  83:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_Enable();
  84:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
  85:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
  86:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
  87:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /*******************************************************************************
  88:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Function Name: ADC_SAR_2_Init
  89:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ********************************************************************************
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 3


  90:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
  91:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Summary:
  92:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Initialize component's parameters to the parameters set by user in the
  93:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  customizer of the component placed onto schematic. Usually called in
  94:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_Start().
  95:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
  96:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Parameters:
  97:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  None.
  98:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
  99:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Return:
 100:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  None.
 101:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 102:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Global variables:
 103:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  The ADC_SAR_2_offset variable is initialized to 0.
 104:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 105:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC5/ADC_SAR_2.c **** void ADC_SAR_2_Init(void)
 107:.\Generated_Source\PSoC5/ADC_SAR_2.c **** {
 108:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 109:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* This is only valid if there is an internal clock */
 110:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #if(ADC_SAR_2_DEFAULT_INTERNAL_CLK)
 111:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         ADC_SAR_2_theACLK_SetMode(CYCLK_DUTY);
 112:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif /* End ADC_SAR_2_DEFAULT_INTERNAL_CLK */
 113:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 114:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #if(ADC_SAR_2_IRQ_REMOVE == 0u)
 115:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         /* Start and set interrupt vector */
 116:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         CyIntSetPriority(ADC_SAR_2_INTC_NUMBER, ADC_SAR_2_INTC_PRIOR_NUMBER);
 117:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         (void)CyIntSetVector(ADC_SAR_2_INTC_NUMBER, &ADC_SAR_2_ISR);
 118:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif   /* End ADC_SAR_2_IRQ_REMOVE */
 119:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 120:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Enable IRQ mode*/
 121:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_SAR_CSR1_REG |= ADC_SAR_2_SAR_IRQ_MASK_EN | ADC_SAR_2_SAR_IRQ_MODE_EDGE;
 122:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 123:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /*Set SAR ADC resolution ADC */
 124:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_SetResolution(ADC_SAR_2_DEFAULT_RESOLUTION);
 125:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_offset = 0;
 126:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 127:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 128:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 129:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /*******************************************************************************
 130:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Function Name: ADC_SAR_2_Enable
 131:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ********************************************************************************
 132:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 133:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Summary:
 134:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Enables the reference, clock and power for SAR ADC.
 135:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 136:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Parameters:
 137:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  None.
 138:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 139:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Return:
 140:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  None.
 141:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 142:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *******************************************************************************/
 143:.\Generated_Source\PSoC5/ADC_SAR_2.c **** void ADC_SAR_2_Enable(void)
 144:.\Generated_Source\PSoC5/ADC_SAR_2.c **** {
 145:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     uint8 tmpReg;
 146:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 4


 147:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     enableInterrupts = CyEnterCriticalSection();
 148:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 149:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Enable the SAR ADC block in Active Power Mode */
 150:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_PWRMGR_SAR_REG |= ADC_SAR_2_ACT_PWR_SAR_EN;
 151:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 152:.\Generated_Source\PSoC5/ADC_SAR_2.c ****      /* Enable the SAR ADC in Standby Power Mode*/
 153:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_STBY_PWRMGR_SAR_REG |= ADC_SAR_2_STBY_PWR_SAR_EN;
 154:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 155:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* This is only valid if there is an internal clock */
 156:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #if(ADC_SAR_2_DEFAULT_INTERNAL_CLK)
 157:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         ADC_SAR_2_PWRMGR_CLK_REG |= ADC_SAR_2_ACT_PWR_CLK_EN;
 158:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         ADC_SAR_2_STBY_PWRMGR_CLK_REG |= ADC_SAR_2_STBY_PWR_CLK_EN;
 159:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif /* End ADC_SAR_2_DEFAULT_INTERNAL_CLK */
 160:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 161:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Enable VCM buffer and Enable Int Ref Amp */
 162:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     tmpReg = ADC_SAR_2_SAR_CSR3_REG;
 163:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     tmpReg |= ADC_SAR_2_SAR_EN_BUF_VCM_EN;
 164:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* PD_BUF_VREF is OFF in External reference or Vdda reference mode */
 165:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #if((ADC_SAR_2_DEFAULT_REFERENCE == ADC_SAR_2__EXT_REF) || \
 166:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         (ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VNEG_VDDA_DIFF))
 167:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         tmpReg &= (uint8)~ADC_SAR_2_SAR_EN_BUF_VREF_EN;
 168:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #else /* In INTREF or INTREF Bypassed this buffer is ON */
 169:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         tmpReg |= ADC_SAR_2_SAR_EN_BUF_VREF_EN;
 170:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif /* ADC_SAR_2_DEFAULT_REFERENCE == ADC_SAR_2__EXT_REF */
 171:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_SAR_CSR3_REG = tmpReg;
 172:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 173:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Set reference for ADC */
 174:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #if(ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VNEG_VDDA_DIFF)
 175:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         #if(ADC_SAR_2_DEFAULT_REFERENCE == ADC_SAR_2__EXT_REF)
 176:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             ADC_SAR_2_SAR_CSR6_REG = ADC_SAR_2_INT_BYPASS_EXT_VREF; /* S2 */
 177:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         #else /* Internal Vdda reference or obsolete bypass mode */
 178:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             ADC_SAR_2_SAR_CSR6_REG = ADC_SAR_2_VDDA_VREF;           /* S7 */
 179:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         #endif /* ADC_SAR_2_DEFAULT_REFERENCE == ADC_SAR_2__EXT_REF */
 180:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #else  /* Reference goes through internal buffer */
 181:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         #if(ADC_SAR_2_DEFAULT_REFERENCE == ADC_SAR_2__INT_REF_NOT_BYPASSED)
 182:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             ADC_SAR_2_SAR_CSR6_REG = ADC_SAR_2_INT_VREF;            /* S3 + S4 */
 183:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         #else /* INTREF Bypassed of External */
 184:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             ADC_SAR_2_SAR_CSR6_REG = ADC_SAR_2_INT_BYPASS_EXT_VREF; /* S2 */
 185:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         #endif /* ADC_SAR_2_DEFAULT_REFERENCE == ADC_SAR_2__INT_REF_NOT_BYPASSED */
 186:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif /* VNEG_VDDA_DIFF */
 187:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 188:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Low non-overlap delay for sampling clock signals (for 1MSPS) */
 189:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #if(ADC_SAR_2_HIGH_POWER_PULSE == 0u) /* MinPulseWidth <= 50 ns */
 190:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         ADC_SAR_2_SAR_CSR5_REG &= (uint8)~ADC_SAR_2_SAR_DLY_INC;
 191:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #else /* Set High non-overlap delay for sampling clock signals (for <500KSPS)*/
 192:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         ADC_SAR_2_SAR_CSR5_REG |= ADC_SAR_2_SAR_DLY_INC;
 193:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif /* ADC_SAR_2_HIGH_POWER_PULSE == 0u */
 194:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 195:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Increase comparator latch enable delay by 20%, 
 196:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  Increase comparator bias current by 30% without impacting delaysDelay 
 197:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  Default for 1MSPS) 
 198:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     */
 199:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #if(ADC_SAR_2_HIGH_POWER_PULSE == 0u)    /* MinPulseWidth <= 50 ns */
 200:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         ADC_SAR_2_SAR_CSR5_REG |= ADC_SAR_2_SAR_SEL_CSEL_DFT_CHAR;
 201:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #else /* for <500ksps */
 202:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         ADC_SAR_2_SAR_CSR5_REG &= (uint8)~ADC_SAR_2_SAR_SEL_CSEL_DFT_CHAR;
 203:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif /* ADC_SAR_2_HIGH_POWER_PULSE == 0u */
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 5


 204:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 205:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Set default power and other configurations for control register 0 in multiple lines */
 206:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_SAR_CSR0_REG = (uint8)((uint8)ADC_SAR_2_DEFAULT_POWER << ADC_SAR_2_SAR_POWER_SHIFT)
 207:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* SAR_HIZ_CLEAR:   Should not be used for LP */
 208:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #if ((CY_PSOC5LP) || (ADC_SAR_2_DEFAULT_REFERENCE != ADC_SAR_2__EXT_REF))
 209:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         | ADC_SAR_2_SAR_HIZ_CLEAR
 210:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif /* SAR_HIZ_CLEAR */
 211:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /*Set Convertion mode */
 212:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #if(ADC_SAR_2_DEFAULT_CONV_MODE != ADC_SAR_2__FREE_RUNNING)      /* If triggered mode */
 213:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         | ADC_SAR_2_SAR_MX_SOF_UDB           /* source: UDB */
 214:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         | ADC_SAR_2_SAR_SOF_MODE_EDGE        /* Set edge-sensitive sof source */
 215:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif /* ADC_SAR_2_DEFAULT_CONV_MODE */
 216:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ; /* end of multiple line initialization */
 217:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 218:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_SAR_TR0_REG = ADC_SAR_2_SAR_CAP_TRIM_2;
 219:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 220:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Enable clock for SAR ADC*/
 221:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_SAR_CLK_REG |= ADC_SAR_2_SAR_MX_CLK_EN;
 222:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 223:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     CyDelayUs(10u); /* The block is ready to use 10 us after the enable signal is set high. */
 224:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 225:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #if(ADC_SAR_2_IRQ_REMOVE == 0u)
 226:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         /* Clear a pending interrupt */
 227:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         CyIntClearPending(ADC_SAR_2_INTC_NUMBER);
 228:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif   /* End ADC_SAR_2_IRQ_REMOVE */
 229:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 230:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     CyExitCriticalSection(enableInterrupts);
 231:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 232:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 233:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 234:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /*******************************************************************************
 235:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Function Name: ADC_SAR_2_Stop
 236:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ********************************************************************************
 237:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 238:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Summary:
 239:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Stops ADC conversions and puts the ADC into its lowest power mode.
 240:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 241:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Parameters:
 242:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  None.
 243:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 244:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Return:
 245:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  None.
 246:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 247:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *******************************************************************************/
 248:.\Generated_Source\PSoC5/ADC_SAR_2.c **** void ADC_SAR_2_Stop(void)
 249:.\Generated_Source\PSoC5/ADC_SAR_2.c **** {
 250:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     uint8 enableInterrupts;
 251:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     enableInterrupts = CyEnterCriticalSection();
 252:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 253:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Stop all conversions */
 254:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_SAR_CSR0_REG &= (uint8)~ADC_SAR_2_SAR_SOF_START_CONV;
 255:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Disable the SAR ADC block in Active Power Mode */
 256:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_PWRMGR_SAR_REG &= (uint8)~ADC_SAR_2_ACT_PWR_SAR_EN;
 257:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Disable the SAR ADC in Standby Power Mode */
 258:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_STBY_PWRMGR_SAR_REG &= (uint8)~ADC_SAR_2_STBY_PWR_SAR_EN;
 259:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 260:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* This is only valid if there is an internal clock */
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 6


 261:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #if(ADC_SAR_2_DEFAULT_INTERNAL_CLK)
 262:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         ADC_SAR_2_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_2_ACT_PWR_CLK_EN;
 263:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         ADC_SAR_2_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_2_STBY_PWR_CLK_EN;
 264:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif /* End ADC_SAR_2_DEFAULT_INTERNAL_CLK */
 265:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 266:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     CyExitCriticalSection(enableInterrupts);
 267:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 268:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 269:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 270:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 271:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /*******************************************************************************
 272:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Function Name: ADC_SAR_2_SetPower
 273:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ********************************************************************************
 274:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 275:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Summary:
 276:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Sets the operational power of the ADC. You should use the higher power
 277:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  settings with faster clock speeds.
 278:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 279:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Parameters:
 280:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  power:  Power setting for ADC
 281:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  0 ->    Normal
 282:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  1 ->    Medium power
 283:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  2 ->    1.25 power
 284:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  3 ->    Minimum power.
 285:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 286:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Return:
 287:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  None.
 288:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 289:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *******************************************************************************/
 290:.\Generated_Source\PSoC5/ADC_SAR_2.c **** void ADC_SAR_2_SetPower(uint8 power)
 291:.\Generated_Source\PSoC5/ADC_SAR_2.c **** {
 292:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     uint8 tmpReg;
 293:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 294:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* mask off invalid power settings */
 295:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     power &= ADC_SAR_2_SAR_API_POWER_MASK;
 296:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 297:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Set Power parameter  */
 298:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     tmpReg = ADC_SAR_2_SAR_CSR0_REG & (uint8)~ADC_SAR_2_SAR_POWER_MASK;
 299:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     tmpReg |= (uint8)(power << ADC_SAR_2_SAR_POWER_SHIFT);
 300:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_SAR_CSR0_REG = tmpReg;
 301:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 302:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 303:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 304:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /*******************************************************************************
 305:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Function Name: ADC_SAR_2_SetResolution
 306:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ********************************************************************************
 307:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 308:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Summary:
 309:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Sets the Relution of the SAR.
 310:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 311:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Parameters:
 312:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  resolution:
 313:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  12 ->    RES12
 314:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  10 ->    RES10
 315:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  8  ->    RES8
 316:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 317:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Return:
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 7


 318:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  None.
 319:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 320:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Side Effects:
 321:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  The ADC resolution cannot be changed during a conversion cycle. The
 322:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  recommended best practice is to stop conversions with
 323:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_StopConvert(), change the resolution, then restart the
 324:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  conversions with ADC_StartConvert().
 325:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  If you decide not to stop conversions before calling this API, you
 326:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  should use ADC_IsEndConversion() to wait until conversion is complete
 327:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  before changing the resolution.
 328:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  If you call ADC_SetResolution() during a conversion, the resolution will
 329:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  not be changed until the current conversion is complete. Data will not be
 330:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  available in the new resolution for another 6 + "New Resolution(in bits)"
 331:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  clock cycles.
 332:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  You may need add a delay of this number of clock cycles after
 333:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SetResolution() is called before data is valid again.
 334:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Affects ADC_CountsTo_Volts(), ADC_CountsTo_mVolts(), and
 335:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_CountsTo_uVolts() by calculating the correct conversion between ADC
 336:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  counts and the applied input voltage. Calculation depends on resolution,
 337:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  input range, and voltage reference.
 338:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 339:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *******************************************************************************/
 340:.\Generated_Source\PSoC5/ADC_SAR_2.c **** void ADC_SAR_2_SetResolution(uint8 resolution)
 341:.\Generated_Source\PSoC5/ADC_SAR_2.c **** {
 342:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     uint8 tmpReg;
 343:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 344:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Set SAR ADC resolution and sample width: 18 conversion cycles at 12bits + 1 gap */
 345:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     switch (resolution)
 346:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     {
 347:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         case (uint8)ADC_SAR_2__BITS_12:
 348:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             tmpReg = ADC_SAR_2_SAR_RESOLUTION_12BIT | ADC_SAR_2_SAR_SAMPLE_WIDTH;
 349:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             break;
 350:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         case (uint8)ADC_SAR_2__BITS_10:
 351:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             tmpReg = ADC_SAR_2_SAR_RESOLUTION_10BIT | ADC_SAR_2_SAR_SAMPLE_WIDTH;
 352:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             break;
 353:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         case (uint8)ADC_SAR_2__BITS_8:
 354:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             tmpReg = ADC_SAR_2_SAR_RESOLUTION_8BIT | ADC_SAR_2_SAR_SAMPLE_WIDTH;
 355:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             break;
 356:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         default:
 357:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             tmpReg = ADC_SAR_2_SAR_RESOLUTION_12BIT | ADC_SAR_2_SAR_SAMPLE_WIDTH;
 358:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             /* Halt CPU in debug mode if resolution is out of valid range */
 359:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             CYASSERT(0u != 0u);
 360:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             break;
 361:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     }
 362:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_SAR_CSR2_REG = tmpReg;
 363:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 364:.\Generated_Source\PSoC5/ADC_SAR_2.c ****      /* Calculate gain for convert counts to volts */
 365:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_CalcGain(resolution);
 366:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 367:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 368:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 369:.\Generated_Source\PSoC5/ADC_SAR_2.c **** #if(ADC_SAR_2_DEFAULT_CONV_MODE != ADC_SAR_2__HARDWARE_TRIGGER)
 370:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 371:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 372:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /*******************************************************************************
 373:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     * Function Name: ADC_SAR_2_StartConvert
 374:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ********************************************************************************
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 8


 375:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *
 376:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     * Summary:
 377:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  Forces the ADC to initiate a conversion. In free-running mode, the ADC runs
 378:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  continuously. In software trigger mode, the function also acts as a software
 379:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  version of the SOC and every conversion must be triggered by
 380:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  ADC_SAR_2_StartConvert(). This function is not available when the
 381:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  Hardware Trigger sample mode is selected.
 382:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *
 383:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     * Parameters:
 384:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  None.
 385:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *
 386:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     * Return:
 387:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  None.
 388:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *
 389:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     * Theory:
 390:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  Forces the ADC to initiate a conversion. In Free Running mode, the ADC will
 391:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  run continuously. In a software trigger mode the function also acts as a
 392:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  software version of the SOC. Here every conversion has to be triggered by
 393:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  the routine. This writes into the SOC bit in SAR_CTRL reg.
 394:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *
 395:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     * Side Effects:
 396:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  In a software trigger mode the function switches source for SOF from the
 397:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  external pin to the internal SOF generation. Application should not call
 398:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  StartConvert if external source used for SOF.
 399:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *
 400:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *******************************************************************************/
 401:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     void ADC_SAR_2_StartConvert(void)
 402:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     {
 403:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         #if(ADC_SAR_2_DEFAULT_CONV_MODE != ADC_SAR_2__FREE_RUNNING)  /* If software triggered mode 
 404:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             ADC_SAR_2_SAR_CSR0_REG &= (uint8)~ADC_SAR_2_SAR_MX_SOF_UDB;   /* source: SOF bit */
 405:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         #endif /* End ADC_SAR_2_DEFAULT_CONV_MODE */
 406:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 407:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         /* Start the conversion */
 408:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         ADC_SAR_2_SAR_CSR0_REG |= ADC_SAR_2_SAR_SOF_START_CONV;
 409:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     }
 410:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 411:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 412:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /*******************************************************************************
 413:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     * Function Name: ADC_SAR_2_StopConvert
 414:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ********************************************************************************
 415:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *
 416:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     * Summary:
 417:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  Forces the ADC to stop conversions. If a conversion is currently executing,
 418:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  that conversion will complete, but no further conversions will occur. This
 419:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  function is not available when the Hardware Trigger sample mode is selected.
 420:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *
 421:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     * Parameters:
 422:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  None.
 423:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *
 424:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     * Return:
 425:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  None.
 426:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *
 427:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     * Theory:
 428:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  Stops ADC conversion in Free Running mode.
 429:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *
 430:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     * Side Effects:
 431:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  In Software Trigger sample mode, this function sets a software version of the
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 9


 432:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  SOC to low level and switches the SOC source to hardware SOC input.
 433:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *
 434:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *******************************************************************************/
 435:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     void ADC_SAR_2_StopConvert(void)
 436:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     {
 437:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         /* Stop all conversions */
 438:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         ADC_SAR_2_SAR_CSR0_REG &= (uint8)~ADC_SAR_2_SAR_SOF_START_CONV;
 439:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 440:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         #if(ADC_SAR_2_DEFAULT_CONV_MODE != ADC_SAR_2__FREE_RUNNING)  /* If software triggered mode 
 441:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             /* Return source to UDB for hardware SOF signal */
 442:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             ADC_SAR_2_SAR_CSR0_REG |= ADC_SAR_2_SAR_MX_SOF_UDB;    /* source: UDB */
 443:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         #endif /* End ADC_SAR_2_DEFAULT_CONV_MODE */
 444:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 445:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     }
 446:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 447:.\Generated_Source\PSoC5/ADC_SAR_2.c **** #endif /* End ADC_SAR_2_DEFAULT_CONV_MODE != ADC_SAR_2__HARDWARE_TRIGGER */
 448:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 449:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 450:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Function Name: ADC_SAR_2_IsEndConversion
 452:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ********************************************************************************
 453:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 454:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Summary:
 455:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Immediately returns the status of the conversion or does not return
 456:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  (blocking) until the conversion completes, depending on the retMode
 457:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  parameter.
 458:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 459:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Parameters:
 460:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  retMode:  Check conversion return mode.
 461:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *   ADC_SAR_2_RETURN_STATUS: Immediately returns the status. If the
 462:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *     value returned is zero, the conversion is not complete, and this function
 463:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *     should be retried until a nonzero result is returned.
 464:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *   ADC_SAR_2_WAIT_FOR_RESULT: Does not return a result until the ADC
 465:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *     conversion is complete.
 466:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 467:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Return:
 468:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  (uint8)  0 =>  The ADC is still calculating the last result.
 469:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *           1 =>  The last conversion is complete.
 470:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 471:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Side Effects:
 472:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  This function reads the end of conversion status, which is cleared on read.
 473:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 474:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *******************************************************************************/
 475:.\Generated_Source\PSoC5/ADC_SAR_2.c **** uint8 ADC_SAR_2_IsEndConversion(uint8 retMode)
 476:.\Generated_Source\PSoC5/ADC_SAR_2.c **** {
 477:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     uint8 status;
 478:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 479:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     do
 480:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     {
 481:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         status = ADC_SAR_2_SAR_CSR1_REG & ADC_SAR_2_SAR_EOF_1;
 482:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     } while ((status != ADC_SAR_2_SAR_EOF_1) && (retMode == ADC_SAR_2_WAIT_FOR_RESULT));
 483:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* If convertion complete, wait until EOF bit released */
 484:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     if(status == ADC_SAR_2_SAR_EOF_1)
 485:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     {
 486:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         /* wait one ADC clock to let the EOC status bit release */
 487:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         CyDelayUs(1u);
 488:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         /* Do the unconditional read operation of the CSR1 register to make sure the EOC bit has be
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 10


 489:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         CY_GET_REG8(ADC_SAR_2_SAR_CSR1_PTR);
 490:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     }
 491:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 492:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     return(status);
 493:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 494:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 495:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 496:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /*******************************************************************************
 497:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Function Name: ADC_SAR_2_GetResult8
 498:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ********************************************************************************
 499:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 500:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Summary:
 501:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Returns the result of an 8-bit conversion. If the resolution is set greater
 502:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  than 8 bits, the function returns the LSB of the result.
 503:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_IsEndConversion() should be called to verify that the data
 504:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *   sample is ready.
 505:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 506:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Parameters:
 507:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  None.
 508:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 509:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Return:
 510:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  The LSB of the last ADC conversion.
 511:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 512:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Global Variables:
 513:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_shift - used to convert the ADC counts to the 2s
 514:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  compliment form.
 515:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 516:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Side Effects:
 517:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Converts the ADC counts to the 2s complement form.
 518:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 519:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *******************************************************************************/
 520:.\Generated_Source\PSoC5/ADC_SAR_2.c **** int8 ADC_SAR_2_GetResult8( void )
 521:.\Generated_Source\PSoC5/ADC_SAR_2.c **** {
 522:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     return( (int8)ADC_SAR_2_SAR_WRK0_REG - (int8)ADC_SAR_2_shift);
 523:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 524:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 525:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 526:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /*******************************************************************************
 527:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Function Name: ADC_SAR_2_GetResult16
 528:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ********************************************************************************
 529:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 530:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Summary:
 531:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Returns a 16-bit result for a conversion with a result that has a resolution
 532:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  of 8 to 12 bits.
 533:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_IsEndConversion() should be called to verify that the data
 534:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *   sample is ready
 535:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 536:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Parameters:
 537:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  None.
 538:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 539:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Return:
 540:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  The 16-bit result of the last ADC conversion
 541:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 542:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Global Variables:
 543:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_shift - used to convert the ADC counts to the 2s
 544:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  compliment form.
 545:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 11


 546:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Side Effects:
 547:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Converts the ADC counts to the 2s complement form.
 548:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 549:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *******************************************************************************/
 550:.\Generated_Source\PSoC5/ADC_SAR_2.c **** int16 ADC_SAR_2_GetResult16( void )
 551:.\Generated_Source\PSoC5/ADC_SAR_2.c **** {
 552:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     uint16 res;
 553:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 554:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     res = CY_GET_REG16(ADC_SAR_2_SAR_WRK_PTR);
 555:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 556:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     return( (int16)res - ADC_SAR_2_shift );
 557:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 558:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 559:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 560:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /*******************************************************************************
 561:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Function Name: ADC_SAR_2_SetOffset
 562:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ********************************************************************************
 563:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 564:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Summary:
 565:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Sets the ADC offset, which is used by ADC_SAR_2_CountsTo_Volts(),
 566:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_CountsTo_mVolts(), and ADC_SAR_2_CountsTo_uVolts()
 567:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  to subtract the offset from the given reading before calculating the voltage
 568:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  conversion.
 569:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 570:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Parameters:
 571:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  int16: This value is measured when the inputs are shorted or connected to
 572:.\Generated_Source\PSoC5/ADC_SAR_2.c ****    the same input voltage.
 573:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 574:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Return:
 575:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  None.
 576:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 577:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Global Variables:
 578:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  The ADC_SAR_2_offset variable modified. This variable is used for
 579:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  offset calibration purpose.
 580:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Affects the ADC_SAR_2_CountsTo_Volts,
 581:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_CountsTo_mVolts, ADC_SAR_2_CountsTo_uVolts functions
 582:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  by subtracting the given offset.
 583:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 584:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *******************************************************************************/
 585:.\Generated_Source\PSoC5/ADC_SAR_2.c **** void ADC_SAR_2_SetOffset(int16 offset)
 586:.\Generated_Source\PSoC5/ADC_SAR_2.c **** {
 587:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_offset = offset;
 588:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 589:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 590:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 591:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /*******************************************************************************
 592:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Function Name: ADC_SAR_2_CalcGain
 593:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ********************************************************************************
 594:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 595:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Summary:
 596:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  This function calculates the ADC gain in counts per 10 volt.
 597:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 598:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Parameters:
 599:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  uint8: resolution
 600:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 601:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Return:
 602:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  None.
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 12


 603:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 604:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Global Variables:
 605:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_shift variable initialized. This variable is used to
 606:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  convert the ADC counts to the 2s compliment form.
 607:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_countsPer10Volt variable initialized. This variable is used
 608:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  for gain calibration purpose.
 609:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 610:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *******************************************************************************/
 611:.\Generated_Source\PSoC5/ADC_SAR_2.c **** static void ADC_SAR_2_CalcGain( uint8 resolution )
 612:.\Generated_Source\PSoC5/ADC_SAR_2.c **** {
  26              		.loc 1 612 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 08B5     		push	{r3, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
 613:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     int32 counts;
 614:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #if(!((ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSS_TO_VREF) || \
 615:.\Generated_Source\PSoC5/ADC_SAR_2.c ****          (ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSSA_TO_VDDA) || \
 616:.\Generated_Source\PSoC5/ADC_SAR_2.c ****          (ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSSA_TO_VDAC)) )
 617:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         uint16 diff_zero;
 618:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif /* End ADC_SAR_2_DEFAULT_RANGE */
 619:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 620:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     switch (resolution)
  35              		.loc 1 620 0
  36 0002 0A28     		cmp	r0, #10
  37 0004 0FD0     		beq	.L6
  38 0006 0C28     		cmp	r0, #12
  39 0008 02D0     		beq	.L4
  40 000a 0828     		cmp	r0, #8
  41 000c 06D1     		bne	.L7
  42 000e 02E0     		b	.L5
  43              	.L4:
 621:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     {
 622:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         case (uint8)ADC_SAR_2__BITS_12:
 623:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             counts = (int32)ADC_SAR_2_SAR_WRK_MAX_12BIT;
  44              		.loc 1 623 0
  45 0010 4FF48052 		mov	r2, #4096
  46 0014 09E0     		b	.L3
  47              	.L5:
  48              	.LVL1:
 624:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             #if(!((ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSS_TO_VREF) || \
 625:.\Generated_Source\PSoC5/ADC_SAR_2.c ****                  (ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSSA_TO_VDDA) || \
 626:.\Generated_Source\PSoC5/ADC_SAR_2.c ****                  (ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSSA_TO_VDAC)) )
 627:.\Generated_Source\PSoC5/ADC_SAR_2.c ****                 diff_zero = ADC_SAR_2_SAR_DIFF_SHIFT;
 628:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             #endif /* End ADC_SAR_2_DEFAULT_RANGE */
 629:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             break;
 630:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         case (uint8)ADC_SAR_2__BITS_10:
 631:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             counts = (int32)ADC_SAR_2_SAR_WRK_MAX_10BIT;
 632:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             #if(!((ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSS_TO_VREF) || \
 633:.\Generated_Source\PSoC5/ADC_SAR_2.c ****                  (ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSSA_TO_VDDA) || \
 634:.\Generated_Source\PSoC5/ADC_SAR_2.c ****                  (ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSSA_TO_VDAC)) )
 635:.\Generated_Source\PSoC5/ADC_SAR_2.c ****                 diff_zero = ADC_SAR_2_SAR_DIFF_SHIFT >> 2u;
 636:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             #endif /* End ADC_SAR_2_DEFAULT_RANGE */
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 13


 637:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             break;
 638:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         case (uint8)ADC_SAR_2__BITS_8:
 639:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             counts = (int32)ADC_SAR_2_SAR_WRK_MAX_8BIT;
  49              		.loc 1 639 0
  50 0016 4FF48072 		mov	r2, #256
 640:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             #if(!((ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSS_TO_VREF) || \
 641:.\Generated_Source\PSoC5/ADC_SAR_2.c ****                  (ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSSA_TO_VDDA) || \
 642:.\Generated_Source\PSoC5/ADC_SAR_2.c ****                  (ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSSA_TO_VDAC)) )
 643:.\Generated_Source\PSoC5/ADC_SAR_2.c ****                 diff_zero = ADC_SAR_2_SAR_DIFF_SHIFT >> 4u;
 644:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             #endif /* End ADC_SAR_2_DEFAULT_RANGE */
 645:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             break;
  51              		.loc 1 645 0
  52 001a 06E0     		b	.L3
  53              	.LVL2:
  54              	.L7:
 646:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         default: /* Halt CPU in debug mode if resolution is out of valid range */
 647:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             counts = 0;
 648:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             #if(!((ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSS_TO_VREF) || \
 649:.\Generated_Source\PSoC5/ADC_SAR_2.c ****                  (ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSSA_TO_VDDA) || \
 650:.\Generated_Source\PSoC5/ADC_SAR_2.c ****                  (ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSSA_TO_VDAC)) )
 651:.\Generated_Source\PSoC5/ADC_SAR_2.c ****                 diff_zero = 0u;
 652:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             #endif /* End ADC_SAR_2_DEFAULT_RANGE */
 653:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             CYASSERT(0u != 0u);
  55              		.loc 1 653 0
  56 001c 0020     		movs	r0, #0
  57              	.LVL3:
  58 001e FFF7FEFF 		bl	CyHalt
  59              	.LVL4:
 647:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             #if(!((ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSS_TO_VREF) || \
  60              		.loc 1 647 0
  61 0022 0022     		movs	r2, #0
  62 0024 01E0     		b	.L3
  63              	.LVL5:
  64              	.L6:
 631:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             #if(!((ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSS_TO_VREF) || \
  65              		.loc 1 631 0
  66 0026 4FF48062 		mov	r2, #1024
  67              	.LVL6:
  68              	.L3:
 654:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             break;
 655:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     }
 656:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_countsPerVolt = 0; /* Clear obsolete variable */
  69              		.loc 1 656 0
  70 002a 0021     		movs	r1, #0
  71 002c 094B     		ldr	r3, .L9
  72 002e 1980     		strh	r1, [r3]	@ movhi
 657:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Calculate gain in counts per 10 volts with rounding */
 658:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_countsPer10Volt = (((counts * ADC_SAR_2_10MV_COUNTS) +
  73              		.loc 1 658 0
  74 0030 42F21073 		movw	r3, #10000
  75 0034 03FB02F3 		mul	r3, r3, r2
  76 0038 03F6C413 		addw	r3, r3, #2500
 659:.\Generated_Source\PSoC5/ADC_SAR_2.c ****                         ADC_SAR_2_DEFAULT_REF_VOLTAGE_MV) / (ADC_SAR_2_DEFAULT_REF_VOLTAGE_MV * 2))
  77              		.loc 1 659 0
  78 003c 064A     		ldr	r2, .L9+4
  79              	.LVL7:
  80 003e 82FB0302 		smull	r0, r2, r2, r3
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 14


  81 0042 DB17     		asrs	r3, r3, #31
  82 0044 C3EBE223 		rsb	r3, r3, r2, asr #11
 658:.\Generated_Source\PSoC5/ADC_SAR_2.c ****                         ADC_SAR_2_DEFAULT_REF_VOLTAGE_MV) / (ADC_SAR_2_DEFAULT_REF_VOLTAGE_MV * 2))
  83              		.loc 1 658 0
  84 0048 044A     		ldr	r2, .L9+8
  85 004a 1360     		str	r3, [r2]
 660:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 661:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #if( (ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSS_TO_VREF) || \
 662:.\Generated_Source\PSoC5/ADC_SAR_2.c ****          (ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSSA_TO_VDDA) || \
 663:.\Generated_Source\PSoC5/ADC_SAR_2.c ****          (ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSSA_TO_VDAC) )
 664:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         ADC_SAR_2_shift = 0;
  86              		.loc 1 664 0
  87 004c 044B     		ldr	r3, .L9+12
  88 004e 1980     		strh	r1, [r3]	@ movhi
  89 0050 08BD     		pop	{r3, pc}
  90              	.L10:
  91 0052 00BF     		.align	2
  92              	.L9:
  93 0054 00000000 		.word	ADC_SAR_2_countsPerVolt
  94 0058 AD8BDB68 		.word	1759218605
  95 005c 00000000 		.word	ADC_SAR_2_countsPer10Volt
  96 0060 00000000 		.word	ADC_SAR_2_shift
  97              		.cfi_endproc
  98              	.LFE12:
  99              		.size	ADC_SAR_2_CalcGain, .-ADC_SAR_2_CalcGain
 100              		.section	.text.ADC_SAR_2_Enable,"ax",%progbits
 101              		.align	2
 102              		.global	ADC_SAR_2_Enable
 103              		.thumb
 104              		.thumb_func
 105              		.type	ADC_SAR_2_Enable, %function
 106              	ADC_SAR_2_Enable:
 107              	.LFB2:
 144:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     uint8 tmpReg;
 108              		.loc 1 144 0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 0, uses_anonymous_args = 0
 112 0000 38B5     		push	{r3, r4, r5, lr}
 113              		.cfi_def_cfa_offset 16
 114              		.cfi_offset 3, -16
 115              		.cfi_offset 4, -12
 116              		.cfi_offset 5, -8
 117              		.cfi_offset 14, -4
 147:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 118              		.loc 1 147 0
 119 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 120              	.LVL8:
 121 0006 0446     		mov	r4, r0
 122              	.LVL9:
 150:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 123              		.loc 1 150 0
 124 0008 1E4A     		ldr	r2, .L13
 125 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 126 000c 43F00203 		orr	r3, r3, #2
 127 0010 1370     		strb	r3, [r2]
 153:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 15


 128              		.loc 1 153 0
 129 0012 1032     		adds	r2, r2, #16
 130 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 131 0016 43F00203 		orr	r3, r3, #2
 132 001a 1370     		strb	r3, [r2]
 157:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         ADC_SAR_2_STBY_PWRMGR_CLK_REG |= ADC_SAR_2_STBY_PWR_CLK_EN;
 133              		.loc 1 157 0
 134 001c 193A     		subs	r2, r2, #25
 135 001e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 136 0020 43F00103 		orr	r3, r3, #1
 137 0024 1370     		strb	r3, [r2]
 158:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif /* End ADC_SAR_2_DEFAULT_INTERNAL_CLK */
 138              		.loc 1 158 0
 139 0026 1032     		adds	r2, r2, #16
 140 0028 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 141 002a 43F00103 		orr	r3, r3, #1
 142 002e 1370     		strb	r3, [r2]
 162:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     tmpReg |= ADC_SAR_2_SAR_EN_BUF_VCM_EN;
 143              		.loc 1 162 0
 144 0030 02F5AA52 		add	r2, r2, #5440
 145 0034 1932     		adds	r2, r2, #25
 146 0036 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 147              	.LVL10:
 169:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif /* ADC_SAR_2_DEFAULT_REFERENCE == ADC_SAR_2__EXT_REF */
 148              		.loc 1 169 0
 149 0038 43F00303 		orr	r3, r3, #3
 150              	.LVL11:
 171:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 151              		.loc 1 171 0
 152 003c 1370     		strb	r3, [r2]
 182:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         #else /* INTREF Bypassed of External */
 153              		.loc 1 182 0
 154 003e 1822     		movs	r2, #24
 155 0040 114B     		ldr	r3, .L13+4
 156              	.LVL12:
 157 0042 1A70     		strb	r2, [r3]
 158              	.LVL13:
 192:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif /* ADC_SAR_2_HIGH_POWER_PULSE == 0u */
 159              		.loc 1 192 0
 160 0044 013B     		subs	r3, r3, #1
 161 0046 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 162 0048 42F04002 		orr	r2, r2, #64
 163 004c 1A70     		strb	r2, [r3]
 202:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif /* ADC_SAR_2_HIGH_POWER_PULSE == 0u */
 164              		.loc 1 202 0
 165 004e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 166 0050 02F0FC02 		and	r2, r2, #252
 167 0054 1A70     		strb	r2, [r3]
 206:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* SAR_HIZ_CLEAR:   Should not be used for LP */
 168              		.loc 1 206 0
 169 0056 CE22     		movs	r2, #206
 170 0058 053B     		subs	r3, r3, #5
 171 005a 1A70     		strb	r2, [r3]
 218:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 172              		.loc 1 218 0
 173 005c 0225     		movs	r5, #2
 174 005e A3F59753 		sub	r3, r3, #4832
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 16


 175 0062 123B     		subs	r3, r3, #18
 176 0064 1D70     		strb	r5, [r3]
 221:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 177              		.loc 1 221 0
 178 0066 094A     		ldr	r2, .L13+8
 179 0068 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 180 006a 43F00803 		orr	r3, r3, #8
 181 006e 1370     		strb	r3, [r2]
 223:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 182              		.loc 1 223 0
 183 0070 0A20     		movs	r0, #10
 184 0072 FFF7FEFF 		bl	CyDelayUs
 185              	.LVL14:
 227:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif   /* End ADC_SAR_2_IRQ_REMOVE */
 186              		.loc 1 227 0
 187 0076 064B     		ldr	r3, .L13+12
 188 0078 1D60     		str	r5, [r3]
 230:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 189              		.loc 1 230 0
 190 007a 2046     		mov	r0, r4
 191 007c FFF7FEFF 		bl	CyExitCriticalSection
 192              	.LVL15:
 193 0080 38BD     		pop	{r3, r4, r5, pc}
 194              	.LVL16:
 195              	.L14:
 196 0082 00BF     		.align	2
 197              	.L13:
 198 0084 AB430040 		.word	1073759147
 199 0088 0E590040 		.word	1073764622
 200 008c 2F5B0040 		.word	1073765167
 201 0090 80E200E0 		.word	-536812928
 202              		.cfi_endproc
 203              	.LFE2:
 204              		.size	ADC_SAR_2_Enable, .-ADC_SAR_2_Enable
 205              		.section	.text.ADC_SAR_2_Stop,"ax",%progbits
 206              		.align	2
 207              		.global	ADC_SAR_2_Stop
 208              		.thumb
 209              		.thumb_func
 210              		.type	ADC_SAR_2_Stop, %function
 211              	ADC_SAR_2_Stop:
 212              	.LFB3:
 249:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     uint8 enableInterrupts;
 213              		.loc 1 249 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217 0000 08B5     		push	{r3, lr}
 218              		.cfi_def_cfa_offset 8
 219              		.cfi_offset 3, -8
 220              		.cfi_offset 14, -4
 251:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 221              		.loc 1 251 0
 222 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 223              	.LVL17:
 254:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Disable the SAR ADC block in Active Power Mode */
 224              		.loc 1 254 0
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 17


 225 0006 0F4A     		ldr	r2, .L17
 226 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 227 000a 03F0FE03 		and	r3, r3, #254
 228 000e 1370     		strb	r3, [r2]
 256:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Disable the SAR ADC in Standby Power Mode */
 229              		.loc 1 256 0
 230 0010 A2F5AA52 		sub	r2, r2, #5440
 231 0014 1D3A     		subs	r2, r2, #29
 232 0016 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 233 0018 03F0FD03 		and	r3, r3, #253
 234 001c 1370     		strb	r3, [r2]
 258:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 235              		.loc 1 258 0
 236 001e 1032     		adds	r2, r2, #16
 237 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 238 0022 03F0FD03 		and	r3, r3, #253
 239 0026 1370     		strb	r3, [r2]
 262:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         ADC_SAR_2_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_2_STBY_PWR_CLK_EN;
 240              		.loc 1 262 0
 241 0028 193A     		subs	r2, r2, #25
 242 002a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 243 002c 03F0FE03 		and	r3, r3, #254
 244 0030 1370     		strb	r3, [r2]
 263:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif /* End ADC_SAR_2_DEFAULT_INTERNAL_CLK */
 245              		.loc 1 263 0
 246 0032 1032     		adds	r2, r2, #16
 247 0034 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 248 0036 03F0FE03 		and	r3, r3, #254
 249 003a 1370     		strb	r3, [r2]
 266:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 250              		.loc 1 266 0
 251 003c FFF7FEFF 		bl	CyExitCriticalSection
 252              	.LVL18:
 253 0040 08BD     		pop	{r3, pc}
 254              	.L18:
 255 0042 00BF     		.align	2
 256              	.L17:
 257 0044 08590040 		.word	1073764616
 258              		.cfi_endproc
 259              	.LFE3:
 260              		.size	ADC_SAR_2_Stop, .-ADC_SAR_2_Stop
 261              		.section	.text.ADC_SAR_2_SetPower,"ax",%progbits
 262              		.align	2
 263              		.global	ADC_SAR_2_SetPower
 264              		.thumb
 265              		.thumb_func
 266              		.type	ADC_SAR_2_SetPower, %function
 267              	ADC_SAR_2_SetPower:
 268              	.LFB4:
 291:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     uint8 tmpReg;
 269              		.loc 1 291 0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 0
 272              		@ frame_needed = 0, uses_anonymous_args = 0
 273              		@ link register save eliminated.
 274              	.LVL19:
 295:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 18


 275              		.loc 1 295 0
 276 0000 00F00300 		and	r0, r0, #3
 277              	.LVL20:
 298:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     tmpReg |= (uint8)(power << ADC_SAR_2_SAR_POWER_SHIFT);
 278              		.loc 1 298 0
 279 0004 034A     		ldr	r2, .L20
 280 0006 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 281 0008 03F03F03 		and	r3, r3, #63
 282              	.LVL21:
 299:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_SAR_CSR0_REG = tmpReg;
 283              		.loc 1 299 0
 284 000c 43EA8010 		orr	r0, r3, r0, lsl #6
 285              	.LVL22:
 300:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 286              		.loc 1 300 0
 287 0010 1070     		strb	r0, [r2]
 288 0012 7047     		bx	lr
 289              	.L21:
 290              		.align	2
 291              	.L20:
 292 0014 08590040 		.word	1073764616
 293              		.cfi_endproc
 294              	.LFE4:
 295              		.size	ADC_SAR_2_SetPower, .-ADC_SAR_2_SetPower
 296              		.section	.text.ADC_SAR_2_SetResolution,"ax",%progbits
 297              		.align	2
 298              		.global	ADC_SAR_2_SetResolution
 299              		.thumb
 300              		.thumb_func
 301              		.type	ADC_SAR_2_SetResolution, %function
 302              	ADC_SAR_2_SetResolution:
 303              	.LFB5:
 341:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     uint8 tmpReg;
 304              		.loc 1 341 0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 0, uses_anonymous_args = 0
 308              	.LVL23:
 309 0000 10B5     		push	{r4, lr}
 310              		.cfi_def_cfa_offset 8
 311              		.cfi_offset 4, -8
 312              		.cfi_offset 14, -4
 313 0002 0446     		mov	r4, r0
 345:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     {
 314              		.loc 1 345 0
 315 0004 0A28     		cmp	r0, #10
 316 0006 0DD0     		beq	.L27
 317 0008 0C28     		cmp	r0, #12
 318 000a 02D0     		beq	.L25
 319 000c 0828     		cmp	r0, #8
 320 000e 04D1     		bne	.L28
 321 0010 01E0     		b	.L26
 322              	.L25:
 348:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             break;
 323              		.loc 1 348 0
 324 0012 C222     		movs	r2, #194
 325 0014 07E0     		b	.L24
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 19


 326              	.L26:
 327              	.LVL24:
 354:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             break;
 328              		.loc 1 354 0
 329 0016 4222     		movs	r2, #66
 355:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         default:
 330              		.loc 1 355 0
 331 0018 05E0     		b	.L24
 332              	.LVL25:
 333              	.L28:
 359:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             break;
 334              		.loc 1 359 0
 335 001a 0020     		movs	r0, #0
 336              	.LVL26:
 337 001c FFF7FEFF 		bl	CyHalt
 338              	.LVL27:
 357:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             /* Halt CPU in debug mode if resolution is out of valid range */
 339              		.loc 1 357 0
 340 0020 C222     		movs	r2, #194
 341 0022 00E0     		b	.L24
 342              	.LVL28:
 343              	.L27:
 351:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             break;
 344              		.loc 1 351 0
 345 0024 8222     		movs	r2, #130
 346              	.LVL29:
 347              	.L24:
 362:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 348              		.loc 1 362 0
 349 0026 034B     		ldr	r3, .L30
 350 0028 1A70     		strb	r2, [r3]
 365:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 351              		.loc 1 365 0
 352 002a 2046     		mov	r0, r4
 353 002c FFF7FEFF 		bl	ADC_SAR_2_CalcGain
 354              	.LVL30:
 355 0030 10BD     		pop	{r4, pc}
 356              	.L31:
 357 0032 00BF     		.align	2
 358              	.L30:
 359 0034 0A590040 		.word	1073764618
 360              		.cfi_endproc
 361              	.LFE5:
 362              		.size	ADC_SAR_2_SetResolution, .-ADC_SAR_2_SetResolution
 363              		.section	.text.ADC_SAR_2_Init,"ax",%progbits
 364              		.align	2
 365              		.global	ADC_SAR_2_Init
 366              		.thumb
 367              		.thumb_func
 368              		.type	ADC_SAR_2_Init, %function
 369              	ADC_SAR_2_Init:
 370              	.LFB1:
 107:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 371              		.loc 1 107 0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 20


 375 0000 08B5     		push	{r3, lr}
 376              		.cfi_def_cfa_offset 8
 377              		.cfi_offset 3, -8
 378              		.cfi_offset 14, -4
 111:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif /* End ADC_SAR_2_DEFAULT_INTERNAL_CLK */
 379              		.loc 1 111 0
 380 0002 1020     		movs	r0, #16
 381 0004 FFF7FEFF 		bl	ADC_SAR_2_theACLK_SetModeRegister
 382              	.LVL31:
 116:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         (void)CyIntSetVector(ADC_SAR_2_INTC_NUMBER, &ADC_SAR_2_ISR);
 383              		.loc 1 116 0
 384 0008 0120     		movs	r0, #1
 385 000a 0721     		movs	r1, #7
 386 000c FFF7FEFF 		bl	CyIntSetPriority
 387              	.LVL32:
 117:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif   /* End ADC_SAR_2_IRQ_REMOVE */
 388              		.loc 1 117 0
 389 0010 0120     		movs	r0, #1
 390 0012 0749     		ldr	r1, .L34
 391 0014 FFF7FEFF 		bl	CyIntSetVector
 392              	.LVL33:
 121:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 393              		.loc 1 121 0
 394 0018 064A     		ldr	r2, .L34+4
 395 001a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 396 001c 43F00603 		orr	r3, r3, #6
 397 0020 1370     		strb	r3, [r2]
 124:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_offset = 0;
 398              		.loc 1 124 0
 399 0022 0C20     		movs	r0, #12
 400 0024 FFF7FEFF 		bl	ADC_SAR_2_SetResolution
 401              	.LVL34:
 125:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 402              		.loc 1 125 0
 403 0028 0022     		movs	r2, #0
 404 002a 034B     		ldr	r3, .L34+8
 405 002c 1A80     		strh	r2, [r3]	@ movhi
 406 002e 08BD     		pop	{r3, pc}
 407              	.L35:
 408              		.align	2
 409              	.L34:
 410 0030 00000000 		.word	ADC_SAR_2_ISR
 411 0034 09590040 		.word	1073764617
 412 0038 00000000 		.word	ADC_SAR_2_offset
 413              		.cfi_endproc
 414              	.LFE1:
 415              		.size	ADC_SAR_2_Init, .-ADC_SAR_2_Init
 416              		.section	.text.ADC_SAR_2_Start,"ax",%progbits
 417              		.align	2
 418              		.global	ADC_SAR_2_Start
 419              		.thumb
 420              		.thumb_func
 421              		.type	ADC_SAR_2_Start, %function
 422              	ADC_SAR_2_Start:
 423              	.LFB0:
  75:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 424              		.loc 1 75 0
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 21


 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 0
 427              		@ frame_needed = 0, uses_anonymous_args = 0
 428 0000 08B5     		push	{r3, lr}
 429              		.cfi_def_cfa_offset 8
 430              		.cfi_offset 3, -8
 431              		.cfi_offset 14, -4
  78:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     {
 432              		.loc 1 78 0
 433 0002 054B     		ldr	r3, .L39
 434 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 435 0006 23B9     		cbnz	r3, .L37
  80:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         ADC_SAR_2_initVar = 1u;
 436              		.loc 1 80 0
 437 0008 FFF7FEFF 		bl	ADC_SAR_2_Init
 438              	.LVL35:
  81:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     }
 439              		.loc 1 81 0
 440 000c 0122     		movs	r2, #1
 441 000e 024B     		ldr	r3, .L39
 442 0010 1A70     		strb	r2, [r3]
 443              	.L37:
  83:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 444              		.loc 1 83 0
 445 0012 FFF7FEFF 		bl	ADC_SAR_2_Enable
 446              	.LVL36:
 447 0016 08BD     		pop	{r3, pc}
 448              	.L40:
 449              		.align	2
 450              	.L39:
 451 0018 00000000 		.word	.LANCHOR0
 452              		.cfi_endproc
 453              	.LFE0:
 454              		.size	ADC_SAR_2_Start, .-ADC_SAR_2_Start
 455              		.section	.text.ADC_SAR_2_StartConvert,"ax",%progbits
 456              		.align	2
 457              		.global	ADC_SAR_2_StartConvert
 458              		.thumb
 459              		.thumb_func
 460              		.type	ADC_SAR_2_StartConvert, %function
 461              	ADC_SAR_2_StartConvert:
 462              	.LFB6:
 402:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         #if(ADC_SAR_2_DEFAULT_CONV_MODE != ADC_SAR_2__FREE_RUNNING)  /* If software triggered mode 
 463              		.loc 1 402 0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              		@ link register save eliminated.
 404:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         #endif /* End ADC_SAR_2_DEFAULT_CONV_MODE */
 468              		.loc 1 404 0
 469 0000 044B     		ldr	r3, .L42
 470 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 471 0004 02F0FB02 		and	r2, r2, #251
 472 0008 1A70     		strb	r2, [r3]
 408:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     }
 473              		.loc 1 408 0
 474 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 22


 475 000c 42F00102 		orr	r2, r2, #1
 476 0010 1A70     		strb	r2, [r3]
 477 0012 7047     		bx	lr
 478              	.L43:
 479              		.align	2
 480              	.L42:
 481 0014 08590040 		.word	1073764616
 482              		.cfi_endproc
 483              	.LFE6:
 484              		.size	ADC_SAR_2_StartConvert, .-ADC_SAR_2_StartConvert
 485              		.section	.text.ADC_SAR_2_StopConvert,"ax",%progbits
 486              		.align	2
 487              		.global	ADC_SAR_2_StopConvert
 488              		.thumb
 489              		.thumb_func
 490              		.type	ADC_SAR_2_StopConvert, %function
 491              	ADC_SAR_2_StopConvert:
 492              	.LFB7:
 436:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         /* Stop all conversions */
 493              		.loc 1 436 0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 0
 496              		@ frame_needed = 0, uses_anonymous_args = 0
 497              		@ link register save eliminated.
 438:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 498              		.loc 1 438 0
 499 0000 044B     		ldr	r3, .L45
 500 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 501 0004 02F0FE02 		and	r2, r2, #254
 502 0008 1A70     		strb	r2, [r3]
 442:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         #endif /* End ADC_SAR_2_DEFAULT_CONV_MODE */
 503              		.loc 1 442 0
 504 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 505 000c 42F00402 		orr	r2, r2, #4
 506 0010 1A70     		strb	r2, [r3]
 507 0012 7047     		bx	lr
 508              	.L46:
 509              		.align	2
 510              	.L45:
 511 0014 08590040 		.word	1073764616
 512              		.cfi_endproc
 513              	.LFE7:
 514              		.size	ADC_SAR_2_StopConvert, .-ADC_SAR_2_StopConvert
 515              		.section	.text.ADC_SAR_2_IsEndConversion,"ax",%progbits
 516              		.align	2
 517              		.global	ADC_SAR_2_IsEndConversion
 518              		.thumb
 519              		.thumb_func
 520              		.type	ADC_SAR_2_IsEndConversion, %function
 521              	ADC_SAR_2_IsEndConversion:
 522              	.LFB8:
 476:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     uint8 status;
 523              		.loc 1 476 0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 0
 526              		@ frame_needed = 0, uses_anonymous_args = 0
 527              	.LVL37:
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 23


 528 0000 10B5     		push	{r4, lr}
 529              		.cfi_def_cfa_offset 8
 530              		.cfi_offset 4, -8
 531              		.cfi_offset 14, -4
 532              	.L49:
 481:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     } while ((status != ADC_SAR_2_SAR_EOF_1) && (retMode == ADC_SAR_2_WAIT_FOR_RESULT));
 533              		.loc 1 481 0 discriminator 2
 534 0002 074B     		ldr	r3, .L52
 535 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 536              	.LVL38:
 482:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* If convertion complete, wait until EOF bit released */
 537              		.loc 1 482 0 discriminator 2
 538 0006 13F00104 		ands	r4, r3, #1
 539 000a 01D1     		bne	.L48
 482:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* If convertion complete, wait until EOF bit released */
 540              		.loc 1 482 0 is_stmt 0 discriminator 1
 541 000c 0028     		cmp	r0, #0
 542 000e F8D0     		beq	.L49
 543              	.L48:
 484:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     {
 544              		.loc 1 484 0 is_stmt 1
 545 0010 24B1     		cbz	r4, .L50
 487:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         /* Do the unconditional read operation of the CSR1 register to make sure the EOC bit has be
 546              		.loc 1 487 0
 547 0012 0120     		movs	r0, #1
 548              	.LVL39:
 549 0014 FFF7FEFF 		bl	CyDelayUs
 550              	.LVL40:
 489:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     }
 551              		.loc 1 489 0
 552 0018 014B     		ldr	r3, .L52
 553 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 554              	.L50:
 493:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 555              		.loc 1 493 0
 556 001c 2046     		mov	r0, r4
 557 001e 10BD     		pop	{r4, pc}
 558              	.L53:
 559              		.align	2
 560              	.L52:
 561 0020 09590040 		.word	1073764617
 562              		.cfi_endproc
 563              	.LFE8:
 564              		.size	ADC_SAR_2_IsEndConversion, .-ADC_SAR_2_IsEndConversion
 565              		.section	.text.ADC_SAR_2_GetResult8,"ax",%progbits
 566              		.align	2
 567              		.global	ADC_SAR_2_GetResult8
 568              		.thumb
 569              		.thumb_func
 570              		.type	ADC_SAR_2_GetResult8, %function
 571              	ADC_SAR_2_GetResult8:
 572              	.LFB9:
 521:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     return( (int8)ADC_SAR_2_SAR_WRK0_REG - (int8)ADC_SAR_2_shift);
 573              		.loc 1 521 0
 574              		.cfi_startproc
 575              		@ args = 0, pretend = 0, frame = 0
 576              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 24


 577              		@ link register save eliminated.
 522:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 578              		.loc 1 522 0
 579 0000 034B     		ldr	r3, .L55
 580 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 581 0004 034A     		ldr	r2, .L55+4
 582 0006 1088     		ldrh	r0, [r2]
 583 0008 181A     		subs	r0, r3, r0
 523:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 584              		.loc 1 523 0
 585 000a 40B2     		sxtb	r0, r0
 586 000c 7047     		bx	lr
 587              	.L56:
 588 000e 00BF     		.align	2
 589              	.L55:
 590 0010 A25B0040 		.word	1073765282
 591 0014 00000000 		.word	ADC_SAR_2_shift
 592              		.cfi_endproc
 593              	.LFE9:
 594              		.size	ADC_SAR_2_GetResult8, .-ADC_SAR_2_GetResult8
 595              		.section	.text.ADC_SAR_2_GetResult16,"ax",%progbits
 596              		.align	2
 597              		.global	ADC_SAR_2_GetResult16
 598              		.thumb
 599              		.thumb_func
 600              		.type	ADC_SAR_2_GetResult16, %function
 601              	ADC_SAR_2_GetResult16:
 602              	.LFB10:
 551:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     uint16 res;
 603              		.loc 1 551 0
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 0
 606              		@ frame_needed = 0, uses_anonymous_args = 0
 607              		@ link register save eliminated.
 554:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 608              		.loc 1 554 0
 609 0000 034B     		ldr	r3, .L58
 610 0002 1B88     		ldrh	r3, [r3]
 611              	.LVL41:
 556:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 612              		.loc 1 556 0
 613 0004 034A     		ldr	r2, .L58+4
 614 0006 1088     		ldrh	r0, [r2]
 615 0008 181A     		subs	r0, r3, r0
 557:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 616              		.loc 1 557 0
 617 000a 00B2     		sxth	r0, r0
 618 000c 7047     		bx	lr
 619              	.L59:
 620 000e 00BF     		.align	2
 621              	.L58:
 622 0010 A25B0040 		.word	1073765282
 623 0014 00000000 		.word	ADC_SAR_2_shift
 624              		.cfi_endproc
 625              	.LFE10:
 626              		.size	ADC_SAR_2_GetResult16, .-ADC_SAR_2_GetResult16
 627              		.section	.text.ADC_SAR_2_SetOffset,"ax",%progbits
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 25


 628              		.align	2
 629              		.global	ADC_SAR_2_SetOffset
 630              		.thumb
 631              		.thumb_func
 632              		.type	ADC_SAR_2_SetOffset, %function
 633              	ADC_SAR_2_SetOffset:
 634              	.LFB11:
 586:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_offset = offset;
 635              		.loc 1 586 0
 636              		.cfi_startproc
 637              		@ args = 0, pretend = 0, frame = 0
 638              		@ frame_needed = 0, uses_anonymous_args = 0
 639              		@ link register save eliminated.
 640              	.LVL42:
 587:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 641              		.loc 1 587 0
 642 0000 014B     		ldr	r3, .L61
 643 0002 1880     		strh	r0, [r3]	@ movhi
 644 0004 7047     		bx	lr
 645              	.L62:
 646 0006 00BF     		.align	2
 647              	.L61:
 648 0008 00000000 		.word	ADC_SAR_2_offset
 649              		.cfi_endproc
 650              	.LFE11:
 651              		.size	ADC_SAR_2_SetOffset, .-ADC_SAR_2_SetOffset
 652              		.section	.text.ADC_SAR_2_SetGain,"ax",%progbits
 653              		.align	2
 654              		.global	ADC_SAR_2_SetGain
 655              		.thumb
 656              		.thumb_func
 657              		.type	ADC_SAR_2_SetGain, %function
 658              	ADC_SAR_2_SetGain:
 659              	.LFB13:
 665:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #else
 666:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         ADC_SAR_2_shift = diff_zero;
 667:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif /* End ADC_SAR_2_DEFAULT_RANGE */
 668:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 669:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 670:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 671:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Function Name: ADC_SAR_2_SetGain
 673:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ********************************************************************************
 674:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 675:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Summary:
 676:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Sets the ADC gain in counts per volt for the voltage conversion functions
 677:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  that follow. This value is set by default by the reference and input range
 678:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  settings. It should only be used to further calibrate the ADC with a known
 679:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  input or if the ADC is using an external reference.
 680:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 681:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Parameters:
 682:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  int16 adcGain counts per volt
 683:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 684:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Return:
 685:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  None.
 686:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 687:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Global Variables:
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 26


 688:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_countsPer10Volt variable modified. This variable is used
 689:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  for gain calibration purpose.
 690:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 691:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *******************************************************************************/
 692:.\Generated_Source\PSoC5/ADC_SAR_2.c **** void ADC_SAR_2_SetGain(int16 adcGain)
 693:.\Generated_Source\PSoC5/ADC_SAR_2.c **** {
 660              		.loc 1 693 0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 0
 663              		@ frame_needed = 0, uses_anonymous_args = 0
 664              		@ link register save eliminated.
 665              	.LVL43:
 694:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_countsPer10Volt = (int32)adcGain * 10;
 666              		.loc 1 694 0
 667 0000 00EB8000 		add	r0, r0, r0, lsl #2
 668              	.LVL44:
 669 0004 4000     		lsls	r0, r0, #1
 670 0006 014B     		ldr	r3, .L64
 671 0008 1860     		str	r0, [r3]
 672 000a 7047     		bx	lr
 673              	.L65:
 674              		.align	2
 675              	.L64:
 676 000c 00000000 		.word	ADC_SAR_2_countsPer10Volt
 677              		.cfi_endproc
 678              	.LFE13:
 679              		.size	ADC_SAR_2_SetGain, .-ADC_SAR_2_SetGain
 680              		.section	.text.ADC_SAR_2_SetScaledGain,"ax",%progbits
 681              		.align	2
 682              		.global	ADC_SAR_2_SetScaledGain
 683              		.thumb
 684              		.thumb_func
 685              		.type	ADC_SAR_2_SetScaledGain, %function
 686              	ADC_SAR_2_SetScaledGain:
 687              	.LFB14:
 695:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 696:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 697:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 698:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /*******************************************************************************
 699:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Function Name: ADC_SAR_2_SetScaledGain
 700:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ********************************************************************************
 701:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 702:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Summary:
 703:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Sets the ADC gain in counts per 10 volt for the voltage conversion functions
 704:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  that follow. This value is set by default by the reference and input range
 705:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  settings. It should only be used to further calibrate the ADC with a known
 706:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  input or if the ADC is using an external reference.
 707:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 708:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Parameters:
 709:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  int32 adcGain  counts per 10 volt
 710:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 711:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Return:
 712:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  None.
 713:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 714:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Global Variables:
 715:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_countsPer10Volt variable modified. This variable is used
 716:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  for gain calibration purpose.
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 27


 717:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 718:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *******************************************************************************/
 719:.\Generated_Source\PSoC5/ADC_SAR_2.c **** void ADC_SAR_2_SetScaledGain(int32 adcGain)
 720:.\Generated_Source\PSoC5/ADC_SAR_2.c **** {
 688              		.loc 1 720 0
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 0
 691              		@ frame_needed = 0, uses_anonymous_args = 0
 692              		@ link register save eliminated.
 693              	.LVL45:
 721:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_countsPer10Volt = adcGain;
 694              		.loc 1 721 0
 695 0000 014B     		ldr	r3, .L67
 696 0002 1860     		str	r0, [r3]
 697 0004 7047     		bx	lr
 698              	.L68:
 699 0006 00BF     		.align	2
 700              	.L67:
 701 0008 00000000 		.word	ADC_SAR_2_countsPer10Volt
 702              		.cfi_endproc
 703              	.LFE14:
 704              		.size	ADC_SAR_2_SetScaledGain, .-ADC_SAR_2_SetScaledGain
 705              		.section	.text.ADC_SAR_2_CountsTo_mVolts,"ax",%progbits
 706              		.align	2
 707              		.global	ADC_SAR_2_CountsTo_mVolts
 708              		.thumb
 709              		.thumb_func
 710              		.type	ADC_SAR_2_CountsTo_mVolts, %function
 711              	ADC_SAR_2_CountsTo_mVolts:
 712              	.LFB15:
 722:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 723:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 724:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 725:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /*******************************************************************************
 726:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Function Name: ADC_SAR_2_CountsTo_mVolts
 727:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ********************************************************************************
 728:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 729:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Summary:
 730:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Converts the ADC output to millivolts as a 16-bit integer.
 731:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 732:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Parameters:
 733:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  int16 adcCounts:  Result from the ADC conversion
 734:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 735:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Return:
 736:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  int16 Result in mVolts
 737:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 738:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Global Variables:
 739:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_offset variable used.
 740:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_countsPer10Volt variable used.
 741:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 742:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *******************************************************************************/
 743:.\Generated_Source\PSoC5/ADC_SAR_2.c **** int16 ADC_SAR_2_CountsTo_mVolts(int16 adcCounts)
 744:.\Generated_Source\PSoC5/ADC_SAR_2.c **** {
 713              		.loc 1 744 0
 714              		.cfi_startproc
 715              		@ args = 0, pretend = 0, frame = 0
 716              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 28


 717              		@ link register save eliminated.
 718              	.LVL46:
 745:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     int16 mVolts;
 746:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     int32 countsPer10Volt;
 747:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 748:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     if(ADC_SAR_2_countsPerVolt != 0)
 719              		.loc 1 748 0
 720 0000 114B     		ldr	r3, .L74
 721 0002 1B88     		ldrh	r3, [r3]
 722 0004 9BB2     		uxth	r3, r3
 723 0006 33B1     		cbz	r3, .L70
 749:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     {   /* Support obsolete method */
 750:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         countsPer10Volt = (int32)ADC_SAR_2_countsPerVolt * 10;
 724              		.loc 1 750 0
 725 0008 0F4B     		ldr	r3, .L74
 726 000a 1988     		ldrh	r1, [r3]
 727 000c 09B2     		sxth	r1, r1
 728 000e 01EB8101 		add	r1, r1, r1, lsl #2
 729 0012 4900     		lsls	r1, r1, #1
 730              	.LVL47:
 731 0014 01E0     		b	.L71
 732              	.LVL48:
 733              	.L70:
 751:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     }
 752:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     else
 753:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     {
 754:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         countsPer10Volt = ADC_SAR_2_countsPer10Volt;
 734              		.loc 1 754 0
 735 0016 0D4B     		ldr	r3, .L74+4
 736 0018 1968     		ldr	r1, [r3]
 737              	.LVL49:
 738              	.L71:
 755:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     }
 756:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 757:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Subtract ADC offset */
 758:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     adcCounts -= ADC_SAR_2_offset;
 739              		.loc 1 758 0
 740 001a 0D4B     		ldr	r3, .L74+8
 741 001c 1A88     		ldrh	r2, [r3]
 742 001e 821A     		subs	r2, r0, r2
 743 0020 12B2     		sxth	r2, r2
 744              	.LVL50:
 759:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Convert to millivolts with rounding */
 760:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     mVolts = (int16)( (( (int32)adcCounts * ADC_SAR_2_10MV_COUNTS ) + ( (adcCounts > 0) ?
 745              		.loc 1 760 0
 746 0022 42F21070 		movw	r0, #10000
 747 0026 00FB02F0 		mul	r0, r0, r2
 761:.\Generated_Source\PSoC5/ADC_SAR_2.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 748              		.loc 1 761 0
 749 002a 002A     		cmp	r2, #0
 750 002c 03DD     		ble	.L72
 751              		.loc 1 761 0 is_stmt 0 discriminator 1
 752 002e 01EBD173 		add	r3, r1, r1, lsr #31
 753 0032 5B10     		asrs	r3, r3, #1
 754 0034 03E0     		b	.L73
 755              	.L72:
 756              		.loc 1 761 0 discriminator 2
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 29


 757 0036 01EBD172 		add	r2, r1, r1, lsr #31
 758              	.LVL51:
 759 003a 5210     		asrs	r2, r2, #1
 760 003c 5342     		negs	r3, r2
 761              	.L73:
 760:.\Generated_Source\PSoC5/ADC_SAR_2.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 762              		.loc 1 760 0 is_stmt 1
 763 003e 0344     		add	r3, r3, r0
 764              		.loc 1 761 0
 765 0040 93FBF1F0 		sdiv	r0, r3, r1
 766              	.LVL52:
 762:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 763:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     return( mVolts );
 764:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 767              		.loc 1 764 0
 768 0044 00B2     		sxth	r0, r0
 769 0046 7047     		bx	lr
 770              	.L75:
 771              		.align	2
 772              	.L74:
 773 0048 00000000 		.word	ADC_SAR_2_countsPerVolt
 774 004c 00000000 		.word	ADC_SAR_2_countsPer10Volt
 775 0050 00000000 		.word	ADC_SAR_2_offset
 776              		.cfi_endproc
 777              	.LFE15:
 778              		.size	ADC_SAR_2_CountsTo_mVolts, .-ADC_SAR_2_CountsTo_mVolts
 779              		.global	__aeabi_ldivmod
 780              		.section	.text.ADC_SAR_2_CountsTo_uVolts,"ax",%progbits
 781              		.align	2
 782              		.global	ADC_SAR_2_CountsTo_uVolts
 783              		.thumb
 784              		.thumb_func
 785              		.type	ADC_SAR_2_CountsTo_uVolts, %function
 786              	ADC_SAR_2_CountsTo_uVolts:
 787              	.LFB16:
 765:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 766:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 767:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /*******************************************************************************
 768:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Function Name: ADC_SAR_2_CountsTo_uVolts
 769:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ********************************************************************************
 770:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 771:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Summary:
 772:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Converts the ADC output to microvolts as a 32-bit integer.
 773:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 774:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Parameters:
 775:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  int16 adcCounts: Result from the ADC conversion
 776:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 777:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Return:
 778:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  int32 Result in micro Volts
 779:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 780:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Global Variables:
 781:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_offset variable used.
 782:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_countsPer10Volt used to convert ADC counts to uVolts.
 783:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 784:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *******************************************************************************/
 785:.\Generated_Source\PSoC5/ADC_SAR_2.c **** int32 ADC_SAR_2_CountsTo_uVolts(int16 adcCounts)
 786:.\Generated_Source\PSoC5/ADC_SAR_2.c **** {
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 30


 788              		.loc 1 786 0
 789              		.cfi_startproc
 790              		@ args = 0, pretend = 0, frame = 0
 791              		@ frame_needed = 0, uses_anonymous_args = 0
 792              	.LVL53:
 793 0000 38B5     		push	{r3, r4, r5, lr}
 794              		.cfi_def_cfa_offset 16
 795              		.cfi_offset 3, -16
 796              		.cfi_offset 4, -12
 797              		.cfi_offset 5, -8
 798              		.cfi_offset 14, -4
 787:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 788:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     int64 uVolts;
 789:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     int32 countsPer10Volt;
 790:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 791:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     if(ADC_SAR_2_countsPerVolt != 0)
 799              		.loc 1 791 0
 800 0002 0D4B     		ldr	r3, .L80
 801 0004 1B88     		ldrh	r3, [r3]
 802 0006 9BB2     		uxth	r3, r3
 803 0008 33B1     		cbz	r3, .L77
 792:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     {   /* Support obsolete method */
 793:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         countsPer10Volt = (int32)ADC_SAR_2_countsPerVolt * 10;
 804              		.loc 1 793 0
 805 000a 0B4B     		ldr	r3, .L80
 806 000c 1A88     		ldrh	r2, [r3]
 807 000e 12B2     		sxth	r2, r2
 808 0010 02EB8202 		add	r2, r2, r2, lsl #2
 809 0014 5200     		lsls	r2, r2, #1
 810              	.LVL54:
 811 0016 01E0     		b	.L78
 812              	.LVL55:
 813              	.L77:
 794:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     }
 795:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     else
 796:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     {
 797:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         countsPer10Volt = ADC_SAR_2_countsPer10Volt;
 814              		.loc 1 797 0
 815 0018 084B     		ldr	r3, .L80+4
 816 001a 1A68     		ldr	r2, [r3]
 817              	.LVL56:
 818              	.L78:
 798:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     }
 799:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 800:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Subtract ADC offset */
 801:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     adcCounts -= ADC_SAR_2_offset;
 819              		.loc 1 801 0
 820 001c 084B     		ldr	r3, .L80+8
 821 001e 1C88     		ldrh	r4, [r3]
 822              	.LVL57:
 802:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* To convert adcCounts to microVolts it is required to be multiplied
 803:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  on 10 million and later divide on gain in counts per 10V.
 804:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     */
 805:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     uVolts = (( (int64)adcCounts * ADC_SAR_2_10UV_COUNTS ) / countsPer10Volt);
 823              		.loc 1 805 0
 824 0020 041B     		subs	r4, r0, r4
 825              	.LVL58:
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 31


 826 0022 24B2     		sxth	r4, r4
 827 0024 E517     		asrs	r5, r4, #31
 828 0026 074B     		ldr	r3, .L80+12
 829 0028 A4FB0301 		umull	r0, r1, r4, r3
 830 002c 03FB0511 		mla	r1, r3, r5, r1
 831 0030 D317     		asrs	r3, r2, #31
 832 0032 FFF7FEFF 		bl	__aeabi_ldivmod
 833              	.LVL59:
 806:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 807:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     return( uVolts );
 808:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 834              		.loc 1 808 0
 835 0036 38BD     		pop	{r3, r4, r5, pc}
 836              	.L81:
 837              		.align	2
 838              	.L80:
 839 0038 00000000 		.word	ADC_SAR_2_countsPerVolt
 840 003c 00000000 		.word	ADC_SAR_2_countsPer10Volt
 841 0040 00000000 		.word	ADC_SAR_2_offset
 842 0044 80969800 		.word	10000000
 843              		.cfi_endproc
 844              	.LFE16:
 845              		.size	ADC_SAR_2_CountsTo_uVolts, .-ADC_SAR_2_CountsTo_uVolts
 846              		.global	__aeabi_i2f
 847              		.global	__aeabi_fmul
 848              		.global	__aeabi_fdiv
 849              		.section	.text.ADC_SAR_2_CountsTo_Volts,"ax",%progbits
 850              		.align	2
 851              		.global	ADC_SAR_2_CountsTo_Volts
 852              		.thumb
 853              		.thumb_func
 854              		.type	ADC_SAR_2_CountsTo_Volts, %function
 855              	ADC_SAR_2_CountsTo_Volts:
 856              	.LFB17:
 809:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 810:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 811:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /*******************************************************************************
 812:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Function Name: ADC_SAR_2_CountsTo_Volts
 813:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ********************************************************************************
 814:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 815:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Summary:
 816:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Converts the ADC output to volts as a floating-point number.
 817:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 818:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Parameters:
 819:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  int16 adcCounts: Result from the ADC conversion
 820:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 821:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Return:
 822:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  float Result in Volts
 823:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 824:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Global Variables:
 825:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_offset variable used.
 826:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_countsPer10Volt used to convert ADC counts to Volts.
 827:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 828:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *******************************************************************************/
 829:.\Generated_Source\PSoC5/ADC_SAR_2.c **** float32 ADC_SAR_2_CountsTo_Volts(int16 adcCounts)
 830:.\Generated_Source\PSoC5/ADC_SAR_2.c **** {
 857              		.loc 1 830 0
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 32


 858              		.cfi_startproc
 859              		@ args = 0, pretend = 0, frame = 0
 860              		@ frame_needed = 0, uses_anonymous_args = 0
 861              	.LVL60:
 862 0000 38B5     		push	{r3, r4, r5, lr}
 863              		.cfi_def_cfa_offset 16
 864              		.cfi_offset 3, -16
 865              		.cfi_offset 4, -12
 866              		.cfi_offset 5, -8
 867              		.cfi_offset 14, -4
 831:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     float32 volts;
 832:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     int32 countsPer10Volt;
 833:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 834:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     if(ADC_SAR_2_countsPerVolt != 0)
 868              		.loc 1 834 0
 869 0002 0F4B     		ldr	r3, .L86
 870 0004 1B88     		ldrh	r3, [r3]
 871 0006 9BB2     		uxth	r3, r3
 872 0008 33B1     		cbz	r3, .L83
 835:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     {   /* Support obsolete method */
 836:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         countsPer10Volt = (int32)ADC_SAR_2_countsPerVolt * 10;
 873              		.loc 1 836 0
 874 000a 0D4B     		ldr	r3, .L86
 875 000c 1C88     		ldrh	r4, [r3]
 876 000e 24B2     		sxth	r4, r4
 877 0010 04EB8404 		add	r4, r4, r4, lsl #2
 878 0014 6400     		lsls	r4, r4, #1
 879              	.LVL61:
 880 0016 01E0     		b	.L84
 881              	.LVL62:
 882              	.L83:
 837:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     }
 838:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     else
 839:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     {
 840:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         countsPer10Volt = ADC_SAR_2_countsPer10Volt;
 883              		.loc 1 840 0
 884 0018 0A4B     		ldr	r3, .L86+4
 885 001a 1C68     		ldr	r4, [r3]
 886              	.LVL63:
 887              	.L84:
 841:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     }
 842:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 843:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Subtract ADC offset */
 844:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     adcCounts -= ADC_SAR_2_offset;
 888              		.loc 1 844 0
 889 001c 0A4B     		ldr	r3, .L86+8
 890 001e 1B88     		ldrh	r3, [r3]
 891 0020 C01A     		subs	r0, r0, r3
 892              	.LVL64:
 845:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 846:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     volts = ((float32)adcCounts * ADC_SAR_2_10V_COUNTS) / (float32)countsPer10Volt;
 893              		.loc 1 846 0
 894 0022 00B2     		sxth	r0, r0
 895 0024 FFF7FEFF 		bl	__aeabi_i2f
 896              	.LVL65:
 897 0028 0849     		ldr	r1, .L86+12
 898 002a FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 33


 899              	.LVL66:
 900 002e 0546     		mov	r5, r0
 901 0030 2046     		mov	r0, r4
 902 0032 FFF7FEFF 		bl	__aeabi_i2f
 903              	.LVL67:
 904 0036 0146     		mov	r1, r0
 905 0038 2846     		mov	r0, r5
 906 003a FFF7FEFF 		bl	__aeabi_fdiv
 907              	.LVL68:
 847:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 848:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     return( volts );
 849:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 908              		.loc 1 849 0
 909 003e 38BD     		pop	{r3, r4, r5, pc}
 910              	.LVL69:
 911              	.L87:
 912              		.align	2
 913              	.L86:
 914 0040 00000000 		.word	ADC_SAR_2_countsPerVolt
 915 0044 00000000 		.word	ADC_SAR_2_countsPer10Volt
 916 0048 00000000 		.word	ADC_SAR_2_offset
 917 004c 00002041 		.word	1092616192
 918              		.cfi_endproc
 919              	.LFE17:
 920              		.size	ADC_SAR_2_CountsTo_Volts, .-ADC_SAR_2_CountsTo_Volts
 921              		.comm	ADC_SAR_2_shift,2,2
 922              		.comm	ADC_SAR_2_countsPer10Volt,4,4
 923              		.comm	ADC_SAR_2_countsPerVolt,2,2
 924              		.comm	ADC_SAR_2_offset,2,2
 925              		.global	ADC_SAR_2_initVar
 926              		.bss
 927              		.set	.LANCHOR0,. + 0
 928              		.type	ADC_SAR_2_initVar, %object
 929              		.size	ADC_SAR_2_initVar, 1
 930              	ADC_SAR_2_initVar:
 931 0000 00       		.space	1
 932              		.text
 933              	.Letext0:
 934              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 935              		.file 3 ".\\Generated_Source\\PSoC5\\CyLib.h"
 936              		.file 4 ".\\Generated_Source\\PSoC5\\ADC_SAR_2_theACLK.h"
 937              		.section	.debug_info,"",%progbits
 938              	.Ldebug_info0:
 939 0000 F4050000 		.4byte	0x5f4
 940 0004 0400     		.2byte	0x4
 941 0006 00000000 		.4byte	.Ldebug_abbrev0
 942 000a 04       		.byte	0x4
 943 000b 01       		.uleb128 0x1
 944 000c B0030000 		.4byte	.LASF65
 945 0010 01       		.byte	0x1
 946 0011 03020000 		.4byte	.LASF66
 947 0015 F8020000 		.4byte	.LASF67
 948 0019 00000000 		.4byte	.Ldebug_ranges0+0
 949 001d 00000000 		.4byte	0
 950 0021 00000000 		.4byte	.Ldebug_line0
 951 0025 02       		.uleb128 0x2
 952 0026 04       		.byte	0x4
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 34


 953 0027 05       		.byte	0x5
 954 0028 696E7400 		.ascii	"int\000"
 955 002c 03       		.uleb128 0x3
 956 002d 04       		.byte	0x4
 957 002e 07       		.byte	0x7
 958 002f 65010000 		.4byte	.LASF0
 959 0033 03       		.uleb128 0x3
 960 0034 01       		.byte	0x1
 961 0035 06       		.byte	0x6
 962 0036 BB000000 		.4byte	.LASF1
 963 003a 03       		.uleb128 0x3
 964 003b 01       		.byte	0x1
 965 003c 08       		.byte	0x8
 966 003d E0020000 		.4byte	.LASF2
 967 0041 03       		.uleb128 0x3
 968 0042 02       		.byte	0x2
 969 0043 05       		.byte	0x5
 970 0044 EE020000 		.4byte	.LASF3
 971 0048 03       		.uleb128 0x3
 972 0049 02       		.byte	0x2
 973 004a 07       		.byte	0x7
 974 004b EB010000 		.4byte	.LASF4
 975 004f 03       		.uleb128 0x3
 976 0050 04       		.byte	0x4
 977 0051 05       		.byte	0x5
 978 0052 CD000000 		.4byte	.LASF5
 979 0056 03       		.uleb128 0x3
 980 0057 04       		.byte	0x4
 981 0058 07       		.byte	0x7
 982 0059 91010000 		.4byte	.LASF6
 983 005d 03       		.uleb128 0x3
 984 005e 08       		.byte	0x8
 985 005f 05       		.byte	0x5
 986 0060 AD000000 		.4byte	.LASF7
 987 0064 03       		.uleb128 0x3
 988 0065 08       		.byte	0x8
 989 0066 07       		.byte	0x7
 990 0067 75000000 		.4byte	.LASF8
 991 006b 03       		.uleb128 0x3
 992 006c 04       		.byte	0x4
 993 006d 07       		.byte	0x7
 994 006e 4D020000 		.4byte	.LASF9
 995 0072 04       		.uleb128 0x4
 996 0073 04       		.byte	0x4
 997 0074 78000000 		.4byte	0x78
 998 0078 05       		.uleb128 0x5
 999 0079 03       		.uleb128 0x3
 1000 007a 01       		.byte	0x1
 1001 007b 08       		.byte	0x8
 1002 007c 2B030000 		.4byte	.LASF10
 1003 0080 06       		.uleb128 0x6
 1004 0081 07010000 		.4byte	.LASF11
 1005 0085 02       		.byte	0x2
 1006 0086 9201     		.2byte	0x192
 1007 0088 3A000000 		.4byte	0x3a
 1008 008c 06       		.uleb128 0x6
 1009 008d 00000000 		.4byte	.LASF12
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 35


 1010 0091 02       		.byte	0x2
 1011 0092 9301     		.2byte	0x193
 1012 0094 48000000 		.4byte	0x48
 1013 0098 06       		.uleb128 0x6
 1014 0099 1E010000 		.4byte	.LASF13
 1015 009d 02       		.byte	0x2
 1016 009e 9401     		.2byte	0x194
 1017 00a0 56000000 		.4byte	0x56
 1018 00a4 06       		.uleb128 0x6
 1019 00a5 FE010000 		.4byte	.LASF14
 1020 00a9 02       		.byte	0x2
 1021 00aa 9501     		.2byte	0x195
 1022 00ac 33000000 		.4byte	0x33
 1023 00b0 06       		.uleb128 0x6
 1024 00b1 6B040000 		.4byte	.LASF15
 1025 00b5 02       		.byte	0x2
 1026 00b6 9601     		.2byte	0x196
 1027 00b8 41000000 		.4byte	0x41
 1028 00bc 06       		.uleb128 0x6
 1029 00bd C7000000 		.4byte	.LASF16
 1030 00c1 02       		.byte	0x2
 1031 00c2 9701     		.2byte	0x197
 1032 00c4 4F000000 		.4byte	0x4f
 1033 00c8 06       		.uleb128 0x6
 1034 00c9 45020000 		.4byte	.LASF17
 1035 00cd 02       		.byte	0x2
 1036 00ce 9801     		.2byte	0x198
 1037 00d0 D4000000 		.4byte	0xd4
 1038 00d4 03       		.uleb128 0x3
 1039 00d5 04       		.byte	0x4
 1040 00d6 04       		.byte	0x4
 1041 00d7 AE020000 		.4byte	.LASF18
 1042 00db 03       		.uleb128 0x3
 1043 00dc 08       		.byte	0x8
 1044 00dd 04       		.byte	0x4
 1045 00de 17010000 		.4byte	.LASF19
 1046 00e2 06       		.uleb128 0x6
 1047 00e3 7F020000 		.4byte	.LASF20
 1048 00e7 02       		.byte	0x2
 1049 00e8 9D01     		.2byte	0x19d
 1050 00ea 5D000000 		.4byte	0x5d
 1051 00ee 06       		.uleb128 0x6
 1052 00ef D4020000 		.4byte	.LASF21
 1053 00f3 02       		.byte	0x2
 1054 00f4 3C02     		.2byte	0x23c
 1055 00f6 FA000000 		.4byte	0xfa
 1056 00fa 07       		.uleb128 0x7
 1057 00fb 80000000 		.4byte	0x80
 1058 00ff 06       		.uleb128 0x6
 1059 0100 01010000 		.4byte	.LASF22
 1060 0104 02       		.byte	0x2
 1061 0105 3D02     		.2byte	0x23d
 1062 0107 0B010000 		.4byte	0x10b
 1063 010b 07       		.uleb128 0x7
 1064 010c 8C000000 		.4byte	0x8c
 1065 0110 06       		.uleb128 0x6
 1066 0111 2F020000 		.4byte	.LASF23
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 36


 1067 0115 02       		.byte	0x2
 1068 0116 3E02     		.2byte	0x23e
 1069 0118 1C010000 		.4byte	0x11c
 1070 011c 07       		.uleb128 0x7
 1071 011d 98000000 		.4byte	0x98
 1072 0121 06       		.uleb128 0x6
 1073 0122 30030000 		.4byte	.LASF24
 1074 0126 02       		.byte	0x2
 1075 0127 4E02     		.2byte	0x24e
 1076 0129 72000000 		.4byte	0x72
 1077 012d 08       		.uleb128 0x8
 1078 012e 40000000 		.4byte	.LASF68
 1079 0132 01       		.byte	0x1
 1080 0133 6302     		.2byte	0x263
 1081 0135 00000000 		.4byte	.LFB12
 1082 0139 64000000 		.4byte	.LFE12-.LFB12
 1083 013d 01       		.uleb128 0x1
 1084 013e 9C       		.byte	0x9c
 1085 013f 73010000 		.4byte	0x173
 1086 0143 09       		.uleb128 0x9
 1087 0144 20030000 		.4byte	.LASF31
 1088 0148 01       		.byte	0x1
 1089 0149 6302     		.2byte	0x263
 1090 014b 80000000 		.4byte	0x80
 1091 014f 00000000 		.4byte	.LLST0
 1092 0153 0A       		.uleb128 0xa
 1093 0154 39000000 		.4byte	.LASF25
 1094 0158 01       		.byte	0x1
 1095 0159 6502     		.2byte	0x265
 1096 015b BC000000 		.4byte	0xbc
 1097 015f 3A000000 		.4byte	.LLST1
 1098 0163 0B       		.uleb128 0xb
 1099 0164 22000000 		.4byte	.LVL4
 1100 0168 7C050000 		.4byte	0x57c
 1101 016c 0C       		.uleb128 0xc
 1102 016d 01       		.uleb128 0x1
 1103 016e 50       		.byte	0x50
 1104 016f 01       		.uleb128 0x1
 1105 0170 30       		.byte	0x30
 1106 0171 00       		.byte	0
 1107 0172 00       		.byte	0
 1108 0173 0D       		.uleb128 0xd
 1109 0174 54030000 		.4byte	.LASF28
 1110 0178 01       		.byte	0x1
 1111 0179 8F       		.byte	0x8f
 1112 017a 00000000 		.4byte	.LFB2
 1113 017e 94000000 		.4byte	.LFE2-.LFB2
 1114 0182 01       		.uleb128 0x1
 1115 0183 9C       		.byte	0x9c
 1116 0184 D3010000 		.4byte	0x1d3
 1117 0188 0E       		.uleb128 0xe
 1118 0189 87040000 		.4byte	.LASF26
 1119 018d 01       		.byte	0x1
 1120 018e 91       		.byte	0x91
 1121 018f 80000000 		.4byte	0x80
 1122 0193 67000000 		.4byte	.LLST2
 1123 0197 0E       		.uleb128 0xe
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 37


 1124 0198 98030000 		.4byte	.LASF27
 1125 019c 01       		.byte	0x1
 1126 019d 92       		.byte	0x92
 1127 019e 80000000 		.4byte	0x80
 1128 01a2 98000000 		.4byte	.LLST3
 1129 01a6 0F       		.uleb128 0xf
 1130 01a7 06000000 		.4byte	.LVL8
 1131 01ab 8D050000 		.4byte	0x58d
 1132 01af 10       		.uleb128 0x10
 1133 01b0 76000000 		.4byte	.LVL14
 1134 01b4 98050000 		.4byte	0x598
 1135 01b8 C2010000 		.4byte	0x1c2
 1136 01bc 0C       		.uleb128 0xc
 1137 01bd 01       		.uleb128 0x1
 1138 01be 50       		.byte	0x50
 1139 01bf 01       		.uleb128 0x1
 1140 01c0 3A       		.byte	0x3a
 1141 01c1 00       		.byte	0
 1142 01c2 0B       		.uleb128 0xb
 1143 01c3 80000000 		.4byte	.LVL15
 1144 01c7 A9050000 		.4byte	0x5a9
 1145 01cb 0C       		.uleb128 0xc
 1146 01cc 01       		.uleb128 0x1
 1147 01cd 50       		.byte	0x50
 1148 01ce 02       		.uleb128 0x2
 1149 01cf 74       		.byte	0x74
 1150 01d0 00       		.sleb128 0
 1151 01d1 00       		.byte	0
 1152 01d2 00       		.byte	0
 1153 01d3 0D       		.uleb128 0xd
 1154 01d4 9E000000 		.4byte	.LASF29
 1155 01d8 01       		.byte	0x1
 1156 01d9 F8       		.byte	0xf8
 1157 01da 00000000 		.4byte	.LFB3
 1158 01de 48000000 		.4byte	.LFE3-.LFB3
 1159 01e2 01       		.uleb128 0x1
 1160 01e3 9C       		.byte	0x9c
 1161 01e4 0A020000 		.4byte	0x20a
 1162 01e8 0E       		.uleb128 0xe
 1163 01e9 98030000 		.4byte	.LASF27
 1164 01ed 01       		.byte	0x1
 1165 01ee FA       		.byte	0xfa
 1166 01ef 80000000 		.4byte	0x80
 1167 01f3 AB000000 		.4byte	.LLST4
 1168 01f7 0F       		.uleb128 0xf
 1169 01f8 06000000 		.4byte	.LVL17
 1170 01fc 8D050000 		.4byte	0x58d
 1171 0200 0F       		.uleb128 0xf
 1172 0201 40000000 		.4byte	.LVL18
 1173 0205 A9050000 		.4byte	0x5a9
 1174 0209 00       		.byte	0
 1175 020a 11       		.uleb128 0x11
 1176 020b 58040000 		.4byte	.LASF30
 1177 020f 01       		.byte	0x1
 1178 0210 2201     		.2byte	0x122
 1179 0212 00000000 		.4byte	.LFB4
 1180 0216 18000000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 38


 1181 021a 01       		.uleb128 0x1
 1182 021b 9C       		.byte	0x9c
 1183 021c 41020000 		.4byte	0x241
 1184 0220 09       		.uleb128 0x9
 1185 0221 B4020000 		.4byte	.LASF32
 1186 0225 01       		.byte	0x1
 1187 0226 2201     		.2byte	0x122
 1188 0228 80000000 		.4byte	0x80
 1189 022c BE000000 		.4byte	.LLST5
 1190 0230 0A       		.uleb128 0xa
 1191 0231 87040000 		.4byte	.LASF26
 1192 0235 01       		.byte	0x1
 1193 0236 2401     		.2byte	0x124
 1194 0238 80000000 		.4byte	0x80
 1195 023c DC000000 		.4byte	.LLST6
 1196 0240 00       		.byte	0
 1197 0241 11       		.uleb128 0x11
 1198 0242 72010000 		.4byte	.LASF33
 1199 0246 01       		.byte	0x1
 1200 0247 5401     		.2byte	0x154
 1201 0249 00000000 		.4byte	.LFB5
 1202 024d 38000000 		.4byte	.LFE5-.LFB5
 1203 0251 01       		.uleb128 0x1
 1204 0252 9C       		.byte	0x9c
 1205 0253 9B020000 		.4byte	0x29b
 1206 0257 09       		.uleb128 0x9
 1207 0258 20030000 		.4byte	.LASF31
 1208 025c 01       		.byte	0x1
 1209 025d 5401     		.2byte	0x154
 1210 025f 80000000 		.4byte	0x80
 1211 0263 FA000000 		.4byte	.LLST7
 1212 0267 0A       		.uleb128 0xa
 1213 0268 87040000 		.4byte	.LASF26
 1214 026c 01       		.byte	0x1
 1215 026d 5601     		.2byte	0x156
 1216 026f 80000000 		.4byte	0x80
 1217 0273 34010000 		.4byte	.LLST8
 1218 0277 10       		.uleb128 0x10
 1219 0278 20000000 		.4byte	.LVL27
 1220 027c 7C050000 		.4byte	0x57c
 1221 0280 8A020000 		.4byte	0x28a
 1222 0284 0C       		.uleb128 0xc
 1223 0285 01       		.uleb128 0x1
 1224 0286 50       		.byte	0x50
 1225 0287 01       		.uleb128 0x1
 1226 0288 30       		.byte	0x30
 1227 0289 00       		.byte	0
 1228 028a 0B       		.uleb128 0xb
 1229 028b 30000000 		.4byte	.LVL30
 1230 028f 2D010000 		.4byte	0x12d
 1231 0293 0C       		.uleb128 0xc
 1232 0294 01       		.uleb128 0x1
 1233 0295 50       		.byte	0x50
 1234 0296 02       		.uleb128 0x2
 1235 0297 74       		.byte	0x74
 1236 0298 00       		.sleb128 0
 1237 0299 00       		.byte	0
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 39


 1238 029a 00       		.byte	0
 1239 029b 0D       		.uleb128 0xd
 1240 029c 56020000 		.4byte	.LASF34
 1241 02a0 01       		.byte	0x1
 1242 02a1 6A       		.byte	0x6a
 1243 02a2 00000000 		.4byte	.LFB1
 1244 02a6 3C000000 		.4byte	.LFE1-.LFB1
 1245 02aa 01       		.uleb128 0x1
 1246 02ab 9C       		.byte	0x9c
 1247 02ac FE020000 		.4byte	0x2fe
 1248 02b0 10       		.uleb128 0x10
 1249 02b1 08000000 		.4byte	.LVL31
 1250 02b5 BA050000 		.4byte	0x5ba
 1251 02b9 C3020000 		.4byte	0x2c3
 1252 02bd 0C       		.uleb128 0xc
 1253 02be 01       		.uleb128 0x1
 1254 02bf 50       		.byte	0x50
 1255 02c0 01       		.uleb128 0x1
 1256 02c1 40       		.byte	0x40
 1257 02c2 00       		.byte	0
 1258 02c3 10       		.uleb128 0x10
 1259 02c4 10000000 		.4byte	.LVL32
 1260 02c8 CB050000 		.4byte	0x5cb
 1261 02cc DB020000 		.4byte	0x2db
 1262 02d0 0C       		.uleb128 0xc
 1263 02d1 01       		.uleb128 0x1
 1264 02d2 51       		.byte	0x51
 1265 02d3 01       		.uleb128 0x1
 1266 02d4 37       		.byte	0x37
 1267 02d5 0C       		.uleb128 0xc
 1268 02d6 01       		.uleb128 0x1
 1269 02d7 50       		.byte	0x50
 1270 02d8 01       		.uleb128 0x1
 1271 02d9 31       		.byte	0x31
 1272 02da 00       		.byte	0
 1273 02db 10       		.uleb128 0x10
 1274 02dc 18000000 		.4byte	.LVL33
 1275 02e0 E1050000 		.4byte	0x5e1
 1276 02e4 EE020000 		.4byte	0x2ee
 1277 02e8 0C       		.uleb128 0xc
 1278 02e9 01       		.uleb128 0x1
 1279 02ea 50       		.byte	0x50
 1280 02eb 01       		.uleb128 0x1
 1281 02ec 31       		.byte	0x31
 1282 02ed 00       		.byte	0
 1283 02ee 0B       		.uleb128 0xb
 1284 02ef 28000000 		.4byte	.LVL34
 1285 02f3 41020000 		.4byte	0x241
 1286 02f7 0C       		.uleb128 0xc
 1287 02f8 01       		.uleb128 0x1
 1288 02f9 50       		.byte	0x50
 1289 02fa 01       		.uleb128 0x1
 1290 02fb 3C       		.byte	0x3c
 1291 02fc 00       		.byte	0
 1292 02fd 00       		.byte	0
 1293 02fe 0D       		.uleb128 0xd
 1294 02ff 65000000 		.4byte	.LASF35
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 40


 1295 0303 01       		.byte	0x1
 1296 0304 4A       		.byte	0x4a
 1297 0305 00000000 		.4byte	.LFB0
 1298 0309 1C000000 		.4byte	.LFE0-.LFB0
 1299 030d 01       		.uleb128 0x1
 1300 030e 9C       		.byte	0x9c
 1301 030f 26030000 		.4byte	0x326
 1302 0313 0F       		.uleb128 0xf
 1303 0314 0C000000 		.4byte	.LVL35
 1304 0318 9B020000 		.4byte	0x29b
 1305 031c 0F       		.uleb128 0xf
 1306 031d 16000000 		.4byte	.LVL36
 1307 0321 73010000 		.4byte	0x173
 1308 0325 00       		.byte	0
 1309 0326 12       		.uleb128 0x12
 1310 0327 3D030000 		.4byte	.LASF36
 1311 032b 01       		.byte	0x1
 1312 032c 9101     		.2byte	0x191
 1313 032e 00000000 		.4byte	.LFB6
 1314 0332 18000000 		.4byte	.LFE6-.LFB6
 1315 0336 01       		.uleb128 0x1
 1316 0337 9C       		.byte	0x9c
 1317 0338 12       		.uleb128 0x12
 1318 0339 C0010000 		.4byte	.LASF37
 1319 033d 01       		.byte	0x1
 1320 033e B301     		.2byte	0x1b3
 1321 0340 00000000 		.4byte	.LFB7
 1322 0344 18000000 		.4byte	.LFE7-.LFB7
 1323 0348 01       		.uleb128 0x1
 1324 0349 9C       		.byte	0x9c
 1325 034a 13       		.uleb128 0x13
 1326 034b 65020000 		.4byte	.LASF40
 1327 034f 01       		.byte	0x1
 1328 0350 DB01     		.2byte	0x1db
 1329 0352 80000000 		.4byte	0x80
 1330 0356 00000000 		.4byte	.LFB8
 1331 035a 24000000 		.4byte	.LFE8-.LFB8
 1332 035e 01       		.uleb128 0x1
 1333 035f 9C       		.byte	0x9c
 1334 0360 94030000 		.4byte	0x394
 1335 0364 09       		.uleb128 0x9
 1336 0365 5D010000 		.4byte	.LASF38
 1337 0369 01       		.byte	0x1
 1338 036a DB01     		.2byte	0x1db
 1339 036c 80000000 		.4byte	0x80
 1340 0370 61010000 		.4byte	.LLST9
 1341 0374 0A       		.uleb128 0xa
 1342 0375 A9030000 		.4byte	.LASF39
 1343 0379 01       		.byte	0x1
 1344 037a DD01     		.2byte	0x1dd
 1345 037c 80000000 		.4byte	0x80
 1346 0380 82010000 		.4byte	.LLST10
 1347 0384 0B       		.uleb128 0xb
 1348 0385 18000000 		.4byte	.LVL40
 1349 0389 98050000 		.4byte	0x598
 1350 038d 0C       		.uleb128 0xc
 1351 038e 01       		.uleb128 0x1
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 41


 1352 038f 50       		.byte	0x50
 1353 0390 01       		.uleb128 0x1
 1354 0391 31       		.byte	0x31
 1355 0392 00       		.byte	0
 1356 0393 00       		.byte	0
 1357 0394 14       		.uleb128 0x14
 1358 0395 D6010000 		.4byte	.LASF69
 1359 0399 01       		.byte	0x1
 1360 039a 0802     		.2byte	0x208
 1361 039c A4000000 		.4byte	0xa4
 1362 03a0 00000000 		.4byte	.LFB9
 1363 03a4 18000000 		.4byte	.LFE9-.LFB9
 1364 03a8 01       		.uleb128 0x1
 1365 03a9 9C       		.byte	0x9c
 1366 03aa 13       		.uleb128 0x13
 1367 03ab 71040000 		.4byte	.LASF41
 1368 03af 01       		.byte	0x1
 1369 03b0 2602     		.2byte	0x226
 1370 03b2 B0000000 		.4byte	0xb0
 1371 03b6 00000000 		.4byte	.LFB10
 1372 03ba 18000000 		.4byte	.LFE10-.LFB10
 1373 03be 01       		.uleb128 0x1
 1374 03bf 9C       		.byte	0x9c
 1375 03c0 D3030000 		.4byte	0x3d3
 1376 03c4 15       		.uleb128 0x15
 1377 03c5 72657300 		.ascii	"res\000"
 1378 03c9 01       		.byte	0x1
 1379 03ca 2802     		.2byte	0x228
 1380 03cc 8C000000 		.4byte	0x8c
 1381 03d0 01       		.uleb128 0x1
 1382 03d1 53       		.byte	0x53
 1383 03d2 00       		.byte	0
 1384 03d3 11       		.uleb128 0x11
 1385 03d4 25000000 		.4byte	.LASF42
 1386 03d8 01       		.byte	0x1
 1387 03d9 4902     		.2byte	0x249
 1388 03db 00000000 		.4byte	.LFB11
 1389 03df 0C000000 		.4byte	.LFE11-.LFB11
 1390 03e3 01       		.uleb128 0x1
 1391 03e4 9C       		.byte	0x9c
 1392 03e5 F8030000 		.4byte	0x3f8
 1393 03e9 16       		.uleb128 0x16
 1394 03ea 65030000 		.4byte	.LASF43
 1395 03ee 01       		.byte	0x1
 1396 03ef 4902     		.2byte	0x249
 1397 03f1 B0000000 		.4byte	0xb0
 1398 03f5 01       		.uleb128 0x1
 1399 03f6 50       		.byte	0x50
 1400 03f7 00       		.byte	0
 1401 03f8 11       		.uleb128 0x11
 1402 03f9 53000000 		.4byte	.LASF44
 1403 03fd 01       		.byte	0x1
 1404 03fe B402     		.2byte	0x2b4
 1405 0400 00000000 		.4byte	.LFB13
 1406 0404 10000000 		.4byte	.LFE13-.LFB13
 1407 0408 01       		.uleb128 0x1
 1408 0409 9C       		.byte	0x9c
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 42


 1409 040a 1F040000 		.4byte	0x41f
 1410 040e 09       		.uleb128 0x9
 1411 040f 07000000 		.4byte	.LASF45
 1412 0413 01       		.byte	0x1
 1413 0414 B402     		.2byte	0x2b4
 1414 0416 B0000000 		.4byte	0xb0
 1415 041a 99010000 		.4byte	.LLST11
 1416 041e 00       		.byte	0
 1417 041f 11       		.uleb128 0x11
 1418 0420 85020000 		.4byte	.LASF46
 1419 0424 01       		.byte	0x1
 1420 0425 CF02     		.2byte	0x2cf
 1421 0427 00000000 		.4byte	.LFB14
 1422 042b 0C000000 		.4byte	.LFE14-.LFB14
 1423 042f 01       		.uleb128 0x1
 1424 0430 9C       		.byte	0x9c
 1425 0431 44040000 		.4byte	0x444
 1426 0435 16       		.uleb128 0x16
 1427 0436 07000000 		.4byte	.LASF45
 1428 043a 01       		.byte	0x1
 1429 043b CF02     		.2byte	0x2cf
 1430 043d BC000000 		.4byte	0xbc
 1431 0441 01       		.uleb128 0x1
 1432 0442 50       		.byte	0x50
 1433 0443 00       		.byte	0
 1434 0444 13       		.uleb128 0x13
 1435 0445 BA020000 		.4byte	.LASF47
 1436 0449 01       		.byte	0x1
 1437 044a E702     		.2byte	0x2e7
 1438 044c B0000000 		.4byte	0xb0
 1439 0450 00000000 		.4byte	.LFB15
 1440 0454 54000000 		.4byte	.LFE15-.LFB15
 1441 0458 01       		.uleb128 0x1
 1442 0459 9C       		.byte	0x9c
 1443 045a 8D040000 		.4byte	0x48d
 1444 045e 09       		.uleb128 0x9
 1445 045f 8E030000 		.4byte	.LASF48
 1446 0463 01       		.byte	0x1
 1447 0464 E702     		.2byte	0x2e7
 1448 0466 B0000000 		.4byte	0xb0
 1449 046a BA010000 		.4byte	.LLST12
 1450 046e 17       		.uleb128 0x17
 1451 046f 28020000 		.4byte	.LASF49
 1452 0473 01       		.byte	0x1
 1453 0474 E902     		.2byte	0x2e9
 1454 0476 B0000000 		.4byte	0xb0
 1455 047a 01       		.uleb128 0x1
 1456 047b 50       		.byte	0x50
 1457 047c 0A       		.uleb128 0xa
 1458 047d 25010000 		.4byte	.LASF50
 1459 0481 01       		.byte	0x1
 1460 0482 EA02     		.2byte	0x2ea
 1461 0484 BC000000 		.4byte	0xbc
 1462 0488 D8010000 		.4byte	.LLST13
 1463 048c 00       		.byte	0
 1464 048d 18       		.uleb128 0x18
 1465 048e E7000000 		.4byte	.LASF51
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 43


 1466 0492 01       		.byte	0x1
 1467 0493 1103     		.2byte	0x311
 1468 0495 BC000000 		.4byte	0xbc
 1469 0499 00000000 		.4byte	.LFB16
 1470 049d 48000000 		.4byte	.LFE16-.LFB16
 1471 04a1 01       		.uleb128 0x1
 1472 04a2 9C       		.byte	0x9c
 1473 04a3 D4040000 		.4byte	0x4d4
 1474 04a7 09       		.uleb128 0x9
 1475 04a8 8E030000 		.4byte	.LASF48
 1476 04ac 01       		.byte	0x1
 1477 04ad 1103     		.2byte	0x311
 1478 04af B0000000 		.4byte	0xb0
 1479 04b3 F6010000 		.4byte	.LLST14
 1480 04b7 19       		.uleb128 0x19
 1481 04b8 8A010000 		.4byte	.LASF70
 1482 04bc 01       		.byte	0x1
 1483 04bd 1403     		.2byte	0x314
 1484 04bf E2000000 		.4byte	0xe2
 1485 04c3 0A       		.uleb128 0xa
 1486 04c4 25010000 		.4byte	.LASF50
 1487 04c8 01       		.byte	0x1
 1488 04c9 1503     		.2byte	0x315
 1489 04cb BC000000 		.4byte	0xbc
 1490 04cf 19020000 		.4byte	.LLST15
 1491 04d3 00       		.byte	0
 1492 04d4 18       		.uleb128 0x18
 1493 04d5 44010000 		.4byte	.LASF52
 1494 04d9 01       		.byte	0x1
 1495 04da 3D03     		.2byte	0x33d
 1496 04dc C8000000 		.4byte	0xc8
 1497 04e0 00000000 		.4byte	.LFB17
 1498 04e4 50000000 		.4byte	.LFE17-.LFB17
 1499 04e8 01       		.uleb128 0x1
 1500 04e9 9C       		.byte	0x9c
 1501 04ea 1D050000 		.4byte	0x51d
 1502 04ee 09       		.uleb128 0x9
 1503 04ef 8E030000 		.4byte	.LASF48
 1504 04f3 01       		.byte	0x1
 1505 04f4 3D03     		.2byte	0x33d
 1506 04f6 B0000000 		.4byte	0xb0
 1507 04fa 37020000 		.4byte	.LLST16
 1508 04fe 17       		.uleb128 0x17
 1509 04ff A3010000 		.4byte	.LASF53
 1510 0503 01       		.byte	0x1
 1511 0504 3F03     		.2byte	0x33f
 1512 0506 C8000000 		.4byte	0xc8
 1513 050a 01       		.uleb128 0x1
 1514 050b 50       		.byte	0x50
 1515 050c 0A       		.uleb128 0xa
 1516 050d 25010000 		.4byte	.LASF50
 1517 0511 01       		.byte	0x1
 1518 0512 4003     		.2byte	0x340
 1519 0514 BC000000 		.4byte	0xbc
 1520 0518 55020000 		.4byte	.LLST17
 1521 051c 00       		.byte	0
 1522 051d 1A       		.uleb128 0x1a
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 44


 1523 051e 8C000000 		.4byte	.LASF54
 1524 0522 01       		.byte	0x1
 1525 0523 23       		.byte	0x23
 1526 0524 80000000 		.4byte	0x80
 1527 0528 05       		.uleb128 0x5
 1528 0529 03       		.byte	0x3
 1529 052a 00000000 		.4byte	ADC_SAR_2_initVar
 1530 052e 1A       		.uleb128 0x1a
 1531 052f D6000000 		.4byte	.LASF55
 1532 0533 01       		.byte	0x1
 1533 0534 24       		.byte	0x24
 1534 0535 3F050000 		.4byte	0x53f
 1535 0539 05       		.uleb128 0x5
 1536 053a 03       		.byte	0x3
 1537 053b 00000000 		.4byte	ADC_SAR_2_offset
 1538 053f 07       		.uleb128 0x7
 1539 0540 B0000000 		.4byte	0xb0
 1540 0544 1A       		.uleb128 0x1a
 1541 0545 8E040000 		.4byte	.LASF56
 1542 0549 01       		.byte	0x1
 1543 054a 25       		.byte	0x25
 1544 054b 3F050000 		.4byte	0x53f
 1545 054f 05       		.uleb128 0x5
 1546 0550 03       		.byte	0x3
 1547 0551 00000000 		.4byte	ADC_SAR_2_countsPerVolt
 1548 0555 1A       		.uleb128 0x1a
 1549 0556 3E040000 		.4byte	.LASF57
 1550 055a 01       		.byte	0x1
 1551 055b 26       		.byte	0x26
 1552 055c 66050000 		.4byte	0x566
 1553 0560 05       		.uleb128 0x5
 1554 0561 03       		.byte	0x3
 1555 0562 00000000 		.4byte	ADC_SAR_2_countsPer10Volt
 1556 0566 07       		.uleb128 0x7
 1557 0567 BC000000 		.4byte	0xbc
 1558 056b 1A       		.uleb128 0x1a
 1559 056c 35020000 		.4byte	.LASF58
 1560 0570 01       		.byte	0x1
 1561 0571 27       		.byte	0x27
 1562 0572 3F050000 		.4byte	0x53f
 1563 0576 05       		.uleb128 0x5
 1564 0577 03       		.byte	0x3
 1565 0578 00000000 		.4byte	ADC_SAR_2_shift
 1566 057c 1B       		.uleb128 0x1b
 1567 057d D9020000 		.4byte	.LASF59
 1568 0581 03       		.byte	0x3
 1569 0582 7F       		.byte	0x7f
 1570 0583 8D050000 		.4byte	0x58d
 1571 0587 1C       		.uleb128 0x1c
 1572 0588 80000000 		.4byte	0x80
 1573 058c 00       		.byte	0
 1574 058d 1D       		.uleb128 0x1d
 1575 058e A9010000 		.4byte	.LASF71
 1576 0592 03       		.byte	0x3
 1577 0593 7D       		.byte	0x7d
 1578 0594 80000000 		.4byte	0x80
 1579 0598 1B       		.uleb128 0x1b
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 45


 1580 0599 0D010000 		.4byte	.LASF60
 1581 059d 03       		.byte	0x3
 1582 059e 77       		.byte	0x77
 1583 059f A9050000 		.4byte	0x5a9
 1584 05a3 1C       		.uleb128 0x1c
 1585 05a4 8C000000 		.4byte	0x8c
 1586 05a8 00       		.byte	0
 1587 05a9 1B       		.uleb128 0x1b
 1588 05aa 0F000000 		.4byte	.LASF61
 1589 05ae 03       		.byte	0x3
 1590 05af 7E       		.byte	0x7e
 1591 05b0 BA050000 		.4byte	0x5ba
 1592 05b4 1C       		.uleb128 0x1c
 1593 05b5 80000000 		.4byte	0x80
 1594 05b9 00       		.byte	0
 1595 05ba 1B       		.uleb128 0x1b
 1596 05bb 6C030000 		.4byte	.LASF62
 1597 05bf 04       		.byte	0x4
 1598 05c0 32       		.byte	0x32
 1599 05c1 CB050000 		.4byte	0x5cb
 1600 05c5 1C       		.uleb128 0x1c
 1601 05c6 80000000 		.4byte	0x80
 1602 05ca 00       		.byte	0
 1603 05cb 1B       		.uleb128 0x1b
 1604 05cc 9D020000 		.4byte	.LASF63
 1605 05d0 03       		.byte	0x3
 1606 05d1 8B       		.byte	0x8b
 1607 05d2 E1050000 		.4byte	0x5e1
 1608 05d6 1C       		.uleb128 0x1c
 1609 05d7 80000000 		.4byte	0x80
 1610 05db 1C       		.uleb128 0x1c
 1611 05dc 80000000 		.4byte	0x80
 1612 05e0 00       		.byte	0
 1613 05e1 1E       		.uleb128 0x1e
 1614 05e2 35010000 		.4byte	.LASF64
 1615 05e6 03       		.byte	0x3
 1616 05e7 88       		.byte	0x88
 1617 05e8 21010000 		.4byte	0x121
 1618 05ec 1C       		.uleb128 0x1c
 1619 05ed 80000000 		.4byte	0x80
 1620 05f1 1C       		.uleb128 0x1c
 1621 05f2 21010000 		.4byte	0x121
 1622 05f6 00       		.byte	0
 1623 05f7 00       		.byte	0
 1624              		.section	.debug_abbrev,"",%progbits
 1625              	.Ldebug_abbrev0:
 1626 0000 01       		.uleb128 0x1
 1627 0001 11       		.uleb128 0x11
 1628 0002 01       		.byte	0x1
 1629 0003 25       		.uleb128 0x25
 1630 0004 0E       		.uleb128 0xe
 1631 0005 13       		.uleb128 0x13
 1632 0006 0B       		.uleb128 0xb
 1633 0007 03       		.uleb128 0x3
 1634 0008 0E       		.uleb128 0xe
 1635 0009 1B       		.uleb128 0x1b
 1636 000a 0E       		.uleb128 0xe
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 46


 1637 000b 55       		.uleb128 0x55
 1638 000c 17       		.uleb128 0x17
 1639 000d 11       		.uleb128 0x11
 1640 000e 01       		.uleb128 0x1
 1641 000f 10       		.uleb128 0x10
 1642 0010 17       		.uleb128 0x17
 1643 0011 00       		.byte	0
 1644 0012 00       		.byte	0
 1645 0013 02       		.uleb128 0x2
 1646 0014 24       		.uleb128 0x24
 1647 0015 00       		.byte	0
 1648 0016 0B       		.uleb128 0xb
 1649 0017 0B       		.uleb128 0xb
 1650 0018 3E       		.uleb128 0x3e
 1651 0019 0B       		.uleb128 0xb
 1652 001a 03       		.uleb128 0x3
 1653 001b 08       		.uleb128 0x8
 1654 001c 00       		.byte	0
 1655 001d 00       		.byte	0
 1656 001e 03       		.uleb128 0x3
 1657 001f 24       		.uleb128 0x24
 1658 0020 00       		.byte	0
 1659 0021 0B       		.uleb128 0xb
 1660 0022 0B       		.uleb128 0xb
 1661 0023 3E       		.uleb128 0x3e
 1662 0024 0B       		.uleb128 0xb
 1663 0025 03       		.uleb128 0x3
 1664 0026 0E       		.uleb128 0xe
 1665 0027 00       		.byte	0
 1666 0028 00       		.byte	0
 1667 0029 04       		.uleb128 0x4
 1668 002a 0F       		.uleb128 0xf
 1669 002b 00       		.byte	0
 1670 002c 0B       		.uleb128 0xb
 1671 002d 0B       		.uleb128 0xb
 1672 002e 49       		.uleb128 0x49
 1673 002f 13       		.uleb128 0x13
 1674 0030 00       		.byte	0
 1675 0031 00       		.byte	0
 1676 0032 05       		.uleb128 0x5
 1677 0033 15       		.uleb128 0x15
 1678 0034 00       		.byte	0
 1679 0035 27       		.uleb128 0x27
 1680 0036 19       		.uleb128 0x19
 1681 0037 00       		.byte	0
 1682 0038 00       		.byte	0
 1683 0039 06       		.uleb128 0x6
 1684 003a 16       		.uleb128 0x16
 1685 003b 00       		.byte	0
 1686 003c 03       		.uleb128 0x3
 1687 003d 0E       		.uleb128 0xe
 1688 003e 3A       		.uleb128 0x3a
 1689 003f 0B       		.uleb128 0xb
 1690 0040 3B       		.uleb128 0x3b
 1691 0041 05       		.uleb128 0x5
 1692 0042 49       		.uleb128 0x49
 1693 0043 13       		.uleb128 0x13
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 47


 1694 0044 00       		.byte	0
 1695 0045 00       		.byte	0
 1696 0046 07       		.uleb128 0x7
 1697 0047 35       		.uleb128 0x35
 1698 0048 00       		.byte	0
 1699 0049 49       		.uleb128 0x49
 1700 004a 13       		.uleb128 0x13
 1701 004b 00       		.byte	0
 1702 004c 00       		.byte	0
 1703 004d 08       		.uleb128 0x8
 1704 004e 2E       		.uleb128 0x2e
 1705 004f 01       		.byte	0x1
 1706 0050 03       		.uleb128 0x3
 1707 0051 0E       		.uleb128 0xe
 1708 0052 3A       		.uleb128 0x3a
 1709 0053 0B       		.uleb128 0xb
 1710 0054 3B       		.uleb128 0x3b
 1711 0055 05       		.uleb128 0x5
 1712 0056 27       		.uleb128 0x27
 1713 0057 19       		.uleb128 0x19
 1714 0058 11       		.uleb128 0x11
 1715 0059 01       		.uleb128 0x1
 1716 005a 12       		.uleb128 0x12
 1717 005b 06       		.uleb128 0x6
 1718 005c 40       		.uleb128 0x40
 1719 005d 18       		.uleb128 0x18
 1720 005e 9742     		.uleb128 0x2117
 1721 0060 19       		.uleb128 0x19
 1722 0061 01       		.uleb128 0x1
 1723 0062 13       		.uleb128 0x13
 1724 0063 00       		.byte	0
 1725 0064 00       		.byte	0
 1726 0065 09       		.uleb128 0x9
 1727 0066 05       		.uleb128 0x5
 1728 0067 00       		.byte	0
 1729 0068 03       		.uleb128 0x3
 1730 0069 0E       		.uleb128 0xe
 1731 006a 3A       		.uleb128 0x3a
 1732 006b 0B       		.uleb128 0xb
 1733 006c 3B       		.uleb128 0x3b
 1734 006d 05       		.uleb128 0x5
 1735 006e 49       		.uleb128 0x49
 1736 006f 13       		.uleb128 0x13
 1737 0070 02       		.uleb128 0x2
 1738 0071 17       		.uleb128 0x17
 1739 0072 00       		.byte	0
 1740 0073 00       		.byte	0
 1741 0074 0A       		.uleb128 0xa
 1742 0075 34       		.uleb128 0x34
 1743 0076 00       		.byte	0
 1744 0077 03       		.uleb128 0x3
 1745 0078 0E       		.uleb128 0xe
 1746 0079 3A       		.uleb128 0x3a
 1747 007a 0B       		.uleb128 0xb
 1748 007b 3B       		.uleb128 0x3b
 1749 007c 05       		.uleb128 0x5
 1750 007d 49       		.uleb128 0x49
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 48


 1751 007e 13       		.uleb128 0x13
 1752 007f 02       		.uleb128 0x2
 1753 0080 17       		.uleb128 0x17
 1754 0081 00       		.byte	0
 1755 0082 00       		.byte	0
 1756 0083 0B       		.uleb128 0xb
 1757 0084 898201   		.uleb128 0x4109
 1758 0087 01       		.byte	0x1
 1759 0088 11       		.uleb128 0x11
 1760 0089 01       		.uleb128 0x1
 1761 008a 31       		.uleb128 0x31
 1762 008b 13       		.uleb128 0x13
 1763 008c 00       		.byte	0
 1764 008d 00       		.byte	0
 1765 008e 0C       		.uleb128 0xc
 1766 008f 8A8201   		.uleb128 0x410a
 1767 0092 00       		.byte	0
 1768 0093 02       		.uleb128 0x2
 1769 0094 18       		.uleb128 0x18
 1770 0095 9142     		.uleb128 0x2111
 1771 0097 18       		.uleb128 0x18
 1772 0098 00       		.byte	0
 1773 0099 00       		.byte	0
 1774 009a 0D       		.uleb128 0xd
 1775 009b 2E       		.uleb128 0x2e
 1776 009c 01       		.byte	0x1
 1777 009d 3F       		.uleb128 0x3f
 1778 009e 19       		.uleb128 0x19
 1779 009f 03       		.uleb128 0x3
 1780 00a0 0E       		.uleb128 0xe
 1781 00a1 3A       		.uleb128 0x3a
 1782 00a2 0B       		.uleb128 0xb
 1783 00a3 3B       		.uleb128 0x3b
 1784 00a4 0B       		.uleb128 0xb
 1785 00a5 27       		.uleb128 0x27
 1786 00a6 19       		.uleb128 0x19
 1787 00a7 11       		.uleb128 0x11
 1788 00a8 01       		.uleb128 0x1
 1789 00a9 12       		.uleb128 0x12
 1790 00aa 06       		.uleb128 0x6
 1791 00ab 40       		.uleb128 0x40
 1792 00ac 18       		.uleb128 0x18
 1793 00ad 9742     		.uleb128 0x2117
 1794 00af 19       		.uleb128 0x19
 1795 00b0 01       		.uleb128 0x1
 1796 00b1 13       		.uleb128 0x13
 1797 00b2 00       		.byte	0
 1798 00b3 00       		.byte	0
 1799 00b4 0E       		.uleb128 0xe
 1800 00b5 34       		.uleb128 0x34
 1801 00b6 00       		.byte	0
 1802 00b7 03       		.uleb128 0x3
 1803 00b8 0E       		.uleb128 0xe
 1804 00b9 3A       		.uleb128 0x3a
 1805 00ba 0B       		.uleb128 0xb
 1806 00bb 3B       		.uleb128 0x3b
 1807 00bc 0B       		.uleb128 0xb
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 49


 1808 00bd 49       		.uleb128 0x49
 1809 00be 13       		.uleb128 0x13
 1810 00bf 02       		.uleb128 0x2
 1811 00c0 17       		.uleb128 0x17
 1812 00c1 00       		.byte	0
 1813 00c2 00       		.byte	0
 1814 00c3 0F       		.uleb128 0xf
 1815 00c4 898201   		.uleb128 0x4109
 1816 00c7 00       		.byte	0
 1817 00c8 11       		.uleb128 0x11
 1818 00c9 01       		.uleb128 0x1
 1819 00ca 31       		.uleb128 0x31
 1820 00cb 13       		.uleb128 0x13
 1821 00cc 00       		.byte	0
 1822 00cd 00       		.byte	0
 1823 00ce 10       		.uleb128 0x10
 1824 00cf 898201   		.uleb128 0x4109
 1825 00d2 01       		.byte	0x1
 1826 00d3 11       		.uleb128 0x11
 1827 00d4 01       		.uleb128 0x1
 1828 00d5 31       		.uleb128 0x31
 1829 00d6 13       		.uleb128 0x13
 1830 00d7 01       		.uleb128 0x1
 1831 00d8 13       		.uleb128 0x13
 1832 00d9 00       		.byte	0
 1833 00da 00       		.byte	0
 1834 00db 11       		.uleb128 0x11
 1835 00dc 2E       		.uleb128 0x2e
 1836 00dd 01       		.byte	0x1
 1837 00de 3F       		.uleb128 0x3f
 1838 00df 19       		.uleb128 0x19
 1839 00e0 03       		.uleb128 0x3
 1840 00e1 0E       		.uleb128 0xe
 1841 00e2 3A       		.uleb128 0x3a
 1842 00e3 0B       		.uleb128 0xb
 1843 00e4 3B       		.uleb128 0x3b
 1844 00e5 05       		.uleb128 0x5
 1845 00e6 27       		.uleb128 0x27
 1846 00e7 19       		.uleb128 0x19
 1847 00e8 11       		.uleb128 0x11
 1848 00e9 01       		.uleb128 0x1
 1849 00ea 12       		.uleb128 0x12
 1850 00eb 06       		.uleb128 0x6
 1851 00ec 40       		.uleb128 0x40
 1852 00ed 18       		.uleb128 0x18
 1853 00ee 9742     		.uleb128 0x2117
 1854 00f0 19       		.uleb128 0x19
 1855 00f1 01       		.uleb128 0x1
 1856 00f2 13       		.uleb128 0x13
 1857 00f3 00       		.byte	0
 1858 00f4 00       		.byte	0
 1859 00f5 12       		.uleb128 0x12
 1860 00f6 2E       		.uleb128 0x2e
 1861 00f7 00       		.byte	0
 1862 00f8 3F       		.uleb128 0x3f
 1863 00f9 19       		.uleb128 0x19
 1864 00fa 03       		.uleb128 0x3
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 50


 1865 00fb 0E       		.uleb128 0xe
 1866 00fc 3A       		.uleb128 0x3a
 1867 00fd 0B       		.uleb128 0xb
 1868 00fe 3B       		.uleb128 0x3b
 1869 00ff 05       		.uleb128 0x5
 1870 0100 27       		.uleb128 0x27
 1871 0101 19       		.uleb128 0x19
 1872 0102 11       		.uleb128 0x11
 1873 0103 01       		.uleb128 0x1
 1874 0104 12       		.uleb128 0x12
 1875 0105 06       		.uleb128 0x6
 1876 0106 40       		.uleb128 0x40
 1877 0107 18       		.uleb128 0x18
 1878 0108 9742     		.uleb128 0x2117
 1879 010a 19       		.uleb128 0x19
 1880 010b 00       		.byte	0
 1881 010c 00       		.byte	0
 1882 010d 13       		.uleb128 0x13
 1883 010e 2E       		.uleb128 0x2e
 1884 010f 01       		.byte	0x1
 1885 0110 3F       		.uleb128 0x3f
 1886 0111 19       		.uleb128 0x19
 1887 0112 03       		.uleb128 0x3
 1888 0113 0E       		.uleb128 0xe
 1889 0114 3A       		.uleb128 0x3a
 1890 0115 0B       		.uleb128 0xb
 1891 0116 3B       		.uleb128 0x3b
 1892 0117 05       		.uleb128 0x5
 1893 0118 27       		.uleb128 0x27
 1894 0119 19       		.uleb128 0x19
 1895 011a 49       		.uleb128 0x49
 1896 011b 13       		.uleb128 0x13
 1897 011c 11       		.uleb128 0x11
 1898 011d 01       		.uleb128 0x1
 1899 011e 12       		.uleb128 0x12
 1900 011f 06       		.uleb128 0x6
 1901 0120 40       		.uleb128 0x40
 1902 0121 18       		.uleb128 0x18
 1903 0122 9742     		.uleb128 0x2117
 1904 0124 19       		.uleb128 0x19
 1905 0125 01       		.uleb128 0x1
 1906 0126 13       		.uleb128 0x13
 1907 0127 00       		.byte	0
 1908 0128 00       		.byte	0
 1909 0129 14       		.uleb128 0x14
 1910 012a 2E       		.uleb128 0x2e
 1911 012b 00       		.byte	0
 1912 012c 3F       		.uleb128 0x3f
 1913 012d 19       		.uleb128 0x19
 1914 012e 03       		.uleb128 0x3
 1915 012f 0E       		.uleb128 0xe
 1916 0130 3A       		.uleb128 0x3a
 1917 0131 0B       		.uleb128 0xb
 1918 0132 3B       		.uleb128 0x3b
 1919 0133 05       		.uleb128 0x5
 1920 0134 27       		.uleb128 0x27
 1921 0135 19       		.uleb128 0x19
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 51


 1922 0136 49       		.uleb128 0x49
 1923 0137 13       		.uleb128 0x13
 1924 0138 11       		.uleb128 0x11
 1925 0139 01       		.uleb128 0x1
 1926 013a 12       		.uleb128 0x12
 1927 013b 06       		.uleb128 0x6
 1928 013c 40       		.uleb128 0x40
 1929 013d 18       		.uleb128 0x18
 1930 013e 9742     		.uleb128 0x2117
 1931 0140 19       		.uleb128 0x19
 1932 0141 00       		.byte	0
 1933 0142 00       		.byte	0
 1934 0143 15       		.uleb128 0x15
 1935 0144 34       		.uleb128 0x34
 1936 0145 00       		.byte	0
 1937 0146 03       		.uleb128 0x3
 1938 0147 08       		.uleb128 0x8
 1939 0148 3A       		.uleb128 0x3a
 1940 0149 0B       		.uleb128 0xb
 1941 014a 3B       		.uleb128 0x3b
 1942 014b 05       		.uleb128 0x5
 1943 014c 49       		.uleb128 0x49
 1944 014d 13       		.uleb128 0x13
 1945 014e 02       		.uleb128 0x2
 1946 014f 18       		.uleb128 0x18
 1947 0150 00       		.byte	0
 1948 0151 00       		.byte	0
 1949 0152 16       		.uleb128 0x16
 1950 0153 05       		.uleb128 0x5
 1951 0154 00       		.byte	0
 1952 0155 03       		.uleb128 0x3
 1953 0156 0E       		.uleb128 0xe
 1954 0157 3A       		.uleb128 0x3a
 1955 0158 0B       		.uleb128 0xb
 1956 0159 3B       		.uleb128 0x3b
 1957 015a 05       		.uleb128 0x5
 1958 015b 49       		.uleb128 0x49
 1959 015c 13       		.uleb128 0x13
 1960 015d 02       		.uleb128 0x2
 1961 015e 18       		.uleb128 0x18
 1962 015f 00       		.byte	0
 1963 0160 00       		.byte	0
 1964 0161 17       		.uleb128 0x17
 1965 0162 34       		.uleb128 0x34
 1966 0163 00       		.byte	0
 1967 0164 03       		.uleb128 0x3
 1968 0165 0E       		.uleb128 0xe
 1969 0166 3A       		.uleb128 0x3a
 1970 0167 0B       		.uleb128 0xb
 1971 0168 3B       		.uleb128 0x3b
 1972 0169 05       		.uleb128 0x5
 1973 016a 49       		.uleb128 0x49
 1974 016b 13       		.uleb128 0x13
 1975 016c 02       		.uleb128 0x2
 1976 016d 18       		.uleb128 0x18
 1977 016e 00       		.byte	0
 1978 016f 00       		.byte	0
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 52


 1979 0170 18       		.uleb128 0x18
 1980 0171 2E       		.uleb128 0x2e
 1981 0172 01       		.byte	0x1
 1982 0173 3F       		.uleb128 0x3f
 1983 0174 19       		.uleb128 0x19
 1984 0175 03       		.uleb128 0x3
 1985 0176 0E       		.uleb128 0xe
 1986 0177 3A       		.uleb128 0x3a
 1987 0178 0B       		.uleb128 0xb
 1988 0179 3B       		.uleb128 0x3b
 1989 017a 05       		.uleb128 0x5
 1990 017b 27       		.uleb128 0x27
 1991 017c 19       		.uleb128 0x19
 1992 017d 49       		.uleb128 0x49
 1993 017e 13       		.uleb128 0x13
 1994 017f 11       		.uleb128 0x11
 1995 0180 01       		.uleb128 0x1
 1996 0181 12       		.uleb128 0x12
 1997 0182 06       		.uleb128 0x6
 1998 0183 40       		.uleb128 0x40
 1999 0184 18       		.uleb128 0x18
 2000 0185 9642     		.uleb128 0x2116
 2001 0187 19       		.uleb128 0x19
 2002 0188 01       		.uleb128 0x1
 2003 0189 13       		.uleb128 0x13
 2004 018a 00       		.byte	0
 2005 018b 00       		.byte	0
 2006 018c 19       		.uleb128 0x19
 2007 018d 34       		.uleb128 0x34
 2008 018e 00       		.byte	0
 2009 018f 03       		.uleb128 0x3
 2010 0190 0E       		.uleb128 0xe
 2011 0191 3A       		.uleb128 0x3a
 2012 0192 0B       		.uleb128 0xb
 2013 0193 3B       		.uleb128 0x3b
 2014 0194 05       		.uleb128 0x5
 2015 0195 49       		.uleb128 0x49
 2016 0196 13       		.uleb128 0x13
 2017 0197 00       		.byte	0
 2018 0198 00       		.byte	0
 2019 0199 1A       		.uleb128 0x1a
 2020 019a 34       		.uleb128 0x34
 2021 019b 00       		.byte	0
 2022 019c 03       		.uleb128 0x3
 2023 019d 0E       		.uleb128 0xe
 2024 019e 3A       		.uleb128 0x3a
 2025 019f 0B       		.uleb128 0xb
 2026 01a0 3B       		.uleb128 0x3b
 2027 01a1 0B       		.uleb128 0xb
 2028 01a2 49       		.uleb128 0x49
 2029 01a3 13       		.uleb128 0x13
 2030 01a4 3F       		.uleb128 0x3f
 2031 01a5 19       		.uleb128 0x19
 2032 01a6 02       		.uleb128 0x2
 2033 01a7 18       		.uleb128 0x18
 2034 01a8 00       		.byte	0
 2035 01a9 00       		.byte	0
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 53


 2036 01aa 1B       		.uleb128 0x1b
 2037 01ab 2E       		.uleb128 0x2e
 2038 01ac 01       		.byte	0x1
 2039 01ad 3F       		.uleb128 0x3f
 2040 01ae 19       		.uleb128 0x19
 2041 01af 03       		.uleb128 0x3
 2042 01b0 0E       		.uleb128 0xe
 2043 01b1 3A       		.uleb128 0x3a
 2044 01b2 0B       		.uleb128 0xb
 2045 01b3 3B       		.uleb128 0x3b
 2046 01b4 0B       		.uleb128 0xb
 2047 01b5 27       		.uleb128 0x27
 2048 01b6 19       		.uleb128 0x19
 2049 01b7 3C       		.uleb128 0x3c
 2050 01b8 19       		.uleb128 0x19
 2051 01b9 01       		.uleb128 0x1
 2052 01ba 13       		.uleb128 0x13
 2053 01bb 00       		.byte	0
 2054 01bc 00       		.byte	0
 2055 01bd 1C       		.uleb128 0x1c
 2056 01be 05       		.uleb128 0x5
 2057 01bf 00       		.byte	0
 2058 01c0 49       		.uleb128 0x49
 2059 01c1 13       		.uleb128 0x13
 2060 01c2 00       		.byte	0
 2061 01c3 00       		.byte	0
 2062 01c4 1D       		.uleb128 0x1d
 2063 01c5 2E       		.uleb128 0x2e
 2064 01c6 00       		.byte	0
 2065 01c7 3F       		.uleb128 0x3f
 2066 01c8 19       		.uleb128 0x19
 2067 01c9 03       		.uleb128 0x3
 2068 01ca 0E       		.uleb128 0xe
 2069 01cb 3A       		.uleb128 0x3a
 2070 01cc 0B       		.uleb128 0xb
 2071 01cd 3B       		.uleb128 0x3b
 2072 01ce 0B       		.uleb128 0xb
 2073 01cf 27       		.uleb128 0x27
 2074 01d0 19       		.uleb128 0x19
 2075 01d1 49       		.uleb128 0x49
 2076 01d2 13       		.uleb128 0x13
 2077 01d3 3C       		.uleb128 0x3c
 2078 01d4 19       		.uleb128 0x19
 2079 01d5 00       		.byte	0
 2080 01d6 00       		.byte	0
 2081 01d7 1E       		.uleb128 0x1e
 2082 01d8 2E       		.uleb128 0x2e
 2083 01d9 01       		.byte	0x1
 2084 01da 3F       		.uleb128 0x3f
 2085 01db 19       		.uleb128 0x19
 2086 01dc 03       		.uleb128 0x3
 2087 01dd 0E       		.uleb128 0xe
 2088 01de 3A       		.uleb128 0x3a
 2089 01df 0B       		.uleb128 0xb
 2090 01e0 3B       		.uleb128 0x3b
 2091 01e1 0B       		.uleb128 0xb
 2092 01e2 27       		.uleb128 0x27
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 54


 2093 01e3 19       		.uleb128 0x19
 2094 01e4 49       		.uleb128 0x49
 2095 01e5 13       		.uleb128 0x13
 2096 01e6 3C       		.uleb128 0x3c
 2097 01e7 19       		.uleb128 0x19
 2098 01e8 00       		.byte	0
 2099 01e9 00       		.byte	0
 2100 01ea 00       		.byte	0
 2101              		.section	.debug_loc,"",%progbits
 2102              	.Ldebug_loc0:
 2103              	.LLST0:
 2104 0000 00000000 		.4byte	.LVL0
 2105 0004 1E000000 		.4byte	.LVL3
 2106 0008 0100     		.2byte	0x1
 2107 000a 50       		.byte	0x50
 2108 000b 1E000000 		.4byte	.LVL3
 2109 000f 26000000 		.4byte	.LVL5
 2110 0013 0400     		.2byte	0x4
 2111 0015 F3       		.byte	0xf3
 2112 0016 01       		.uleb128 0x1
 2113 0017 50       		.byte	0x50
 2114 0018 9F       		.byte	0x9f
 2115 0019 26000000 		.4byte	.LVL5
 2116 001d 2A000000 		.4byte	.LVL6
 2117 0021 0100     		.2byte	0x1
 2118 0023 50       		.byte	0x50
 2119 0024 2A000000 		.4byte	.LVL6
 2120 0028 64000000 		.4byte	.LFE12
 2121 002c 0400     		.2byte	0x4
 2122 002e F3       		.byte	0xf3
 2123 002f 01       		.uleb128 0x1
 2124 0030 50       		.byte	0x50
 2125 0031 9F       		.byte	0x9f
 2126 0032 00000000 		.4byte	0
 2127 0036 00000000 		.4byte	0
 2128              	.LLST1:
 2129 003a 16000000 		.4byte	.LVL1
 2130 003e 1C000000 		.4byte	.LVL2
 2131 0042 0400     		.2byte	0x4
 2132 0044 0A       		.byte	0xa
 2133 0045 0001     		.2byte	0x100
 2134 0047 9F       		.byte	0x9f
 2135 0048 1C000000 		.4byte	.LVL2
 2136 004c 26000000 		.4byte	.LVL5
 2137 0050 0200     		.2byte	0x2
 2138 0052 30       		.byte	0x30
 2139 0053 9F       		.byte	0x9f
 2140 0054 2A000000 		.4byte	.LVL6
 2141 0058 3E000000 		.4byte	.LVL7
 2142 005c 0100     		.2byte	0x1
 2143 005e 52       		.byte	0x52
 2144 005f 00000000 		.4byte	0
 2145 0063 00000000 		.4byte	0
 2146              	.LLST2:
 2147 0067 38000000 		.4byte	.LVL10
 2148 006b 3C000000 		.4byte	.LVL11
 2149 006f 0500     		.2byte	0x5
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 55


 2150 0071 73       		.byte	0x73
 2151 0072 00       		.sleb128 0
 2152 0073 32       		.byte	0x32
 2153 0074 21       		.byte	0x21
 2154 0075 9F       		.byte	0x9f
 2155 0076 3C000000 		.4byte	.LVL11
 2156 007a 42000000 		.4byte	.LVL12
 2157 007e 0100     		.2byte	0x1
 2158 0080 53       		.byte	0x53
 2159 0081 42000000 		.4byte	.LVL12
 2160 0085 44000000 		.4byte	.LVL13
 2161 0089 0500     		.2byte	0x5
 2162 008b 0C       		.byte	0xc
 2163 008c 0B590040 		.4byte	0x4000590b
 2164 0090 00000000 		.4byte	0
 2165 0094 00000000 		.4byte	0
 2166              	.LLST3:
 2167 0098 08000000 		.4byte	.LVL9
 2168 009c 82000000 		.4byte	.LVL16
 2169 00a0 0100     		.2byte	0x1
 2170 00a2 54       		.byte	0x54
 2171 00a3 00000000 		.4byte	0
 2172 00a7 00000000 		.4byte	0
 2173              	.LLST4:
 2174 00ab 06000000 		.4byte	.LVL17
 2175 00af 3F000000 		.4byte	.LVL18-1
 2176 00b3 0100     		.2byte	0x1
 2177 00b5 50       		.byte	0x50
 2178 00b6 00000000 		.4byte	0
 2179 00ba 00000000 		.4byte	0
 2180              	.LLST5:
 2181 00be 00000000 		.4byte	.LVL19
 2182 00c2 04000000 		.4byte	.LVL20
 2183 00c6 0100     		.2byte	0x1
 2184 00c8 50       		.byte	0x50
 2185 00c9 04000000 		.4byte	.LVL20
 2186 00cd 10000000 		.4byte	.LVL22
 2187 00d1 0100     		.2byte	0x1
 2188 00d3 50       		.byte	0x50
 2189 00d4 00000000 		.4byte	0
 2190 00d8 00000000 		.4byte	0
 2191              	.LLST6:
 2192 00dc 0C000000 		.4byte	.LVL21
 2193 00e0 10000000 		.4byte	.LVL22
 2194 00e4 0100     		.2byte	0x1
 2195 00e6 53       		.byte	0x53
 2196 00e7 10000000 		.4byte	.LVL22
 2197 00eb 18000000 		.4byte	.LFE4
 2198 00ef 0100     		.2byte	0x1
 2199 00f1 50       		.byte	0x50
 2200 00f2 00000000 		.4byte	0
 2201 00f6 00000000 		.4byte	0
 2202              	.LLST7:
 2203 00fa 00000000 		.4byte	.LVL23
 2204 00fe 1C000000 		.4byte	.LVL26
 2205 0102 0100     		.2byte	0x1
 2206 0104 50       		.byte	0x50
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 56


 2207 0105 1C000000 		.4byte	.LVL26
 2208 0109 24000000 		.4byte	.LVL28
 2209 010d 0400     		.2byte	0x4
 2210 010f F3       		.byte	0xf3
 2211 0110 01       		.uleb128 0x1
 2212 0111 50       		.byte	0x50
 2213 0112 9F       		.byte	0x9f
 2214 0113 24000000 		.4byte	.LVL28
 2215 0117 26000000 		.4byte	.LVL29
 2216 011b 0100     		.2byte	0x1
 2217 011d 50       		.byte	0x50
 2218 011e 26000000 		.4byte	.LVL29
 2219 0122 38000000 		.4byte	.LFE5
 2220 0126 0400     		.2byte	0x4
 2221 0128 F3       		.byte	0xf3
 2222 0129 01       		.uleb128 0x1
 2223 012a 50       		.byte	0x50
 2224 012b 9F       		.byte	0x9f
 2225 012c 00000000 		.4byte	0
 2226 0130 00000000 		.4byte	0
 2227              	.LLST8:
 2228 0134 16000000 		.4byte	.LVL24
 2229 0138 1A000000 		.4byte	.LVL25
 2230 013c 0300     		.2byte	0x3
 2231 013e 08       		.byte	0x8
 2232 013f 42       		.byte	0x42
 2233 0140 9F       		.byte	0x9f
 2234 0141 1A000000 		.4byte	.LVL25
 2235 0145 24000000 		.4byte	.LVL28
 2236 0149 0300     		.2byte	0x3
 2237 014b 09       		.byte	0x9
 2238 014c C2       		.byte	0xc2
 2239 014d 9F       		.byte	0x9f
 2240 014e 26000000 		.4byte	.LVL29
 2241 0152 2F000000 		.4byte	.LVL30-1
 2242 0156 0100     		.2byte	0x1
 2243 0158 52       		.byte	0x52
 2244 0159 00000000 		.4byte	0
 2245 015d 00000000 		.4byte	0
 2246              	.LLST9:
 2247 0161 00000000 		.4byte	.LVL37
 2248 0165 14000000 		.4byte	.LVL39
 2249 0169 0100     		.2byte	0x1
 2250 016b 50       		.byte	0x50
 2251 016c 14000000 		.4byte	.LVL39
 2252 0170 24000000 		.4byte	.LFE8
 2253 0174 0400     		.2byte	0x4
 2254 0176 F3       		.byte	0xf3
 2255 0177 01       		.uleb128 0x1
 2256 0178 50       		.byte	0x50
 2257 0179 9F       		.byte	0x9f
 2258 017a 00000000 		.4byte	0
 2259 017e 00000000 		.4byte	0
 2260              	.LLST10:
 2261 0182 06000000 		.4byte	.LVL38
 2262 0186 17000000 		.4byte	.LVL40-1
 2263 018a 0500     		.2byte	0x5
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 57


 2264 018c 73       		.byte	0x73
 2265 018d 00       		.sleb128 0
 2266 018e 31       		.byte	0x31
 2267 018f 1A       		.byte	0x1a
 2268 0190 9F       		.byte	0x9f
 2269 0191 00000000 		.4byte	0
 2270 0195 00000000 		.4byte	0
 2271              	.LLST11:
 2272 0199 00000000 		.4byte	.LVL43
 2273 019d 04000000 		.4byte	.LVL44
 2274 01a1 0100     		.2byte	0x1
 2275 01a3 50       		.byte	0x50
 2276 01a4 04000000 		.4byte	.LVL44
 2277 01a8 10000000 		.4byte	.LFE13
 2278 01ac 0400     		.2byte	0x4
 2279 01ae F3       		.byte	0xf3
 2280 01af 01       		.uleb128 0x1
 2281 01b0 50       		.byte	0x50
 2282 01b1 9F       		.byte	0x9f
 2283 01b2 00000000 		.4byte	0
 2284 01b6 00000000 		.4byte	0
 2285              	.LLST12:
 2286 01ba 00000000 		.4byte	.LVL46
 2287 01be 22000000 		.4byte	.LVL50
 2288 01c2 0100     		.2byte	0x1
 2289 01c4 50       		.byte	0x50
 2290 01c5 22000000 		.4byte	.LVL50
 2291 01c9 3A000000 		.4byte	.LVL51
 2292 01cd 0100     		.2byte	0x1
 2293 01cf 52       		.byte	0x52
 2294 01d0 00000000 		.4byte	0
 2295 01d4 00000000 		.4byte	0
 2296              	.LLST13:
 2297 01d8 14000000 		.4byte	.LVL47
 2298 01dc 16000000 		.4byte	.LVL48
 2299 01e0 0100     		.2byte	0x1
 2300 01e2 51       		.byte	0x51
 2301 01e3 1A000000 		.4byte	.LVL49
 2302 01e7 54000000 		.4byte	.LFE15
 2303 01eb 0100     		.2byte	0x1
 2304 01ed 51       		.byte	0x51
 2305 01ee 00000000 		.4byte	0
 2306 01f2 00000000 		.4byte	0
 2307              	.LLST14:
 2308 01f6 00000000 		.4byte	.LVL53
 2309 01fa 20000000 		.4byte	.LVL57
 2310 01fe 0100     		.2byte	0x1
 2311 0200 50       		.byte	0x50
 2312 0201 20000000 		.4byte	.LVL57
 2313 0205 22000000 		.4byte	.LVL58
 2314 0209 0600     		.2byte	0x6
 2315 020b 70       		.byte	0x70
 2316 020c 00       		.sleb128 0
 2317 020d 74       		.byte	0x74
 2318 020e 00       		.sleb128 0
 2319 020f 1C       		.byte	0x1c
 2320 0210 9F       		.byte	0x9f
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 58


 2321 0211 00000000 		.4byte	0
 2322 0215 00000000 		.4byte	0
 2323              	.LLST15:
 2324 0219 16000000 		.4byte	.LVL54
 2325 021d 18000000 		.4byte	.LVL55
 2326 0221 0100     		.2byte	0x1
 2327 0223 52       		.byte	0x52
 2328 0224 1C000000 		.4byte	.LVL56
 2329 0228 35000000 		.4byte	.LVL59-1
 2330 022c 0100     		.2byte	0x1
 2331 022e 52       		.byte	0x52
 2332 022f 00000000 		.4byte	0
 2333 0233 00000000 		.4byte	0
 2334              	.LLST16:
 2335 0237 00000000 		.4byte	.LVL60
 2336 023b 22000000 		.4byte	.LVL64
 2337 023f 0100     		.2byte	0x1
 2338 0241 50       		.byte	0x50
 2339 0242 22000000 		.4byte	.LVL64
 2340 0246 27000000 		.4byte	.LVL65-1
 2341 024a 0100     		.2byte	0x1
 2342 024c 50       		.byte	0x50
 2343 024d 00000000 		.4byte	0
 2344 0251 00000000 		.4byte	0
 2345              	.LLST17:
 2346 0255 16000000 		.4byte	.LVL61
 2347 0259 18000000 		.4byte	.LVL62
 2348 025d 0100     		.2byte	0x1
 2349 025f 54       		.byte	0x54
 2350 0260 1C000000 		.4byte	.LVL63
 2351 0264 40000000 		.4byte	.LVL69
 2352 0268 0100     		.2byte	0x1
 2353 026a 54       		.byte	0x54
 2354 026b 00000000 		.4byte	0
 2355 026f 00000000 		.4byte	0
 2356              		.section	.debug_aranges,"",%progbits
 2357 0000 A4000000 		.4byte	0xa4
 2358 0004 0200     		.2byte	0x2
 2359 0006 00000000 		.4byte	.Ldebug_info0
 2360 000a 04       		.byte	0x4
 2361 000b 00       		.byte	0
 2362 000c 0000     		.2byte	0
 2363 000e 0000     		.2byte	0
 2364 0010 00000000 		.4byte	.LFB12
 2365 0014 64000000 		.4byte	.LFE12-.LFB12
 2366 0018 00000000 		.4byte	.LFB2
 2367 001c 94000000 		.4byte	.LFE2-.LFB2
 2368 0020 00000000 		.4byte	.LFB3
 2369 0024 48000000 		.4byte	.LFE3-.LFB3
 2370 0028 00000000 		.4byte	.LFB4
 2371 002c 18000000 		.4byte	.LFE4-.LFB4
 2372 0030 00000000 		.4byte	.LFB5
 2373 0034 38000000 		.4byte	.LFE5-.LFB5
 2374 0038 00000000 		.4byte	.LFB1
 2375 003c 3C000000 		.4byte	.LFE1-.LFB1
 2376 0040 00000000 		.4byte	.LFB0
 2377 0044 1C000000 		.4byte	.LFE0-.LFB0
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 59


 2378 0048 00000000 		.4byte	.LFB6
 2379 004c 18000000 		.4byte	.LFE6-.LFB6
 2380 0050 00000000 		.4byte	.LFB7
 2381 0054 18000000 		.4byte	.LFE7-.LFB7
 2382 0058 00000000 		.4byte	.LFB8
 2383 005c 24000000 		.4byte	.LFE8-.LFB8
 2384 0060 00000000 		.4byte	.LFB9
 2385 0064 18000000 		.4byte	.LFE9-.LFB9
 2386 0068 00000000 		.4byte	.LFB10
 2387 006c 18000000 		.4byte	.LFE10-.LFB10
 2388 0070 00000000 		.4byte	.LFB11
 2389 0074 0C000000 		.4byte	.LFE11-.LFB11
 2390 0078 00000000 		.4byte	.LFB13
 2391 007c 10000000 		.4byte	.LFE13-.LFB13
 2392 0080 00000000 		.4byte	.LFB14
 2393 0084 0C000000 		.4byte	.LFE14-.LFB14
 2394 0088 00000000 		.4byte	.LFB15
 2395 008c 54000000 		.4byte	.LFE15-.LFB15
 2396 0090 00000000 		.4byte	.LFB16
 2397 0094 48000000 		.4byte	.LFE16-.LFB16
 2398 0098 00000000 		.4byte	.LFB17
 2399 009c 50000000 		.4byte	.LFE17-.LFB17
 2400 00a0 00000000 		.4byte	0
 2401 00a4 00000000 		.4byte	0
 2402              		.section	.debug_ranges,"",%progbits
 2403              	.Ldebug_ranges0:
 2404 0000 00000000 		.4byte	.LFB12
 2405 0004 64000000 		.4byte	.LFE12
 2406 0008 00000000 		.4byte	.LFB2
 2407 000c 94000000 		.4byte	.LFE2
 2408 0010 00000000 		.4byte	.LFB3
 2409 0014 48000000 		.4byte	.LFE3
 2410 0018 00000000 		.4byte	.LFB4
 2411 001c 18000000 		.4byte	.LFE4
 2412 0020 00000000 		.4byte	.LFB5
 2413 0024 38000000 		.4byte	.LFE5
 2414 0028 00000000 		.4byte	.LFB1
 2415 002c 3C000000 		.4byte	.LFE1
 2416 0030 00000000 		.4byte	.LFB0
 2417 0034 1C000000 		.4byte	.LFE0
 2418 0038 00000000 		.4byte	.LFB6
 2419 003c 18000000 		.4byte	.LFE6
 2420 0040 00000000 		.4byte	.LFB7
 2421 0044 18000000 		.4byte	.LFE7
 2422 0048 00000000 		.4byte	.LFB8
 2423 004c 24000000 		.4byte	.LFE8
 2424 0050 00000000 		.4byte	.LFB9
 2425 0054 18000000 		.4byte	.LFE9
 2426 0058 00000000 		.4byte	.LFB10
 2427 005c 18000000 		.4byte	.LFE10
 2428 0060 00000000 		.4byte	.LFB11
 2429 0064 0C000000 		.4byte	.LFE11
 2430 0068 00000000 		.4byte	.LFB13
 2431 006c 10000000 		.4byte	.LFE13
 2432 0070 00000000 		.4byte	.LFB14
 2433 0074 0C000000 		.4byte	.LFE14
 2434 0078 00000000 		.4byte	.LFB15
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 60


 2435 007c 54000000 		.4byte	.LFE15
 2436 0080 00000000 		.4byte	.LFB16
 2437 0084 48000000 		.4byte	.LFE16
 2438 0088 00000000 		.4byte	.LFB17
 2439 008c 50000000 		.4byte	.LFE17
 2440 0090 00000000 		.4byte	0
 2441 0094 00000000 		.4byte	0
 2442              		.section	.debug_line,"",%progbits
 2443              	.Ldebug_line0:
 2444 0000 21020000 		.section	.debug_str,"MS",%progbits,1
 2444      02006A00 
 2444      00000201 
 2444      FB0E0D00 
 2444      01010101 
 2445              	.LASF12:
 2446 0000 75696E74 		.ascii	"uint16\000"
 2446      313600
 2447              	.LASF45:
 2448 0007 61646347 		.ascii	"adcGain\000"
 2448      61696E00 
 2449              	.LASF61:
 2450 000f 43794578 		.ascii	"CyExitCriticalSection\000"
 2450      69744372 
 2450      69746963 
 2450      616C5365 
 2450      6374696F 
 2451              	.LASF42:
 2452 0025 4144435F 		.ascii	"ADC_SAR_2_SetOffset\000"
 2452      5341525F 
 2452      325F5365 
 2452      744F6666 
 2452      73657400 
 2453              	.LASF25:
 2454 0039 636F756E 		.ascii	"counts\000"
 2454      747300
 2455              	.LASF68:
 2456 0040 4144435F 		.ascii	"ADC_SAR_2_CalcGain\000"
 2456      5341525F 
 2456      325F4361 
 2456      6C634761 
 2456      696E00
 2457              	.LASF44:
 2458 0053 4144435F 		.ascii	"ADC_SAR_2_SetGain\000"
 2458      5341525F 
 2458      325F5365 
 2458      74476169 
 2458      6E00
 2459              	.LASF35:
 2460 0065 4144435F 		.ascii	"ADC_SAR_2_Start\000"
 2460      5341525F 
 2460      325F5374 
 2460      61727400 
 2461              	.LASF8:
 2462 0075 6C6F6E67 		.ascii	"long long unsigned int\000"
 2462      206C6F6E 
 2462      6720756E 
 2462      7369676E 
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 61


 2462      65642069 
 2463              	.LASF54:
 2464 008c 4144435F 		.ascii	"ADC_SAR_2_initVar\000"
 2464      5341525F 
 2464      325F696E 
 2464      69745661 
 2464      7200
 2465              	.LASF29:
 2466 009e 4144435F 		.ascii	"ADC_SAR_2_Stop\000"
 2466      5341525F 
 2466      325F5374 
 2466      6F7000
 2467              	.LASF7:
 2468 00ad 6C6F6E67 		.ascii	"long long int\000"
 2468      206C6F6E 
 2468      6720696E 
 2468      7400
 2469              	.LASF1:
 2470 00bb 7369676E 		.ascii	"signed char\000"
 2470      65642063 
 2470      68617200 
 2471              	.LASF16:
 2472 00c7 696E7433 		.ascii	"int32\000"
 2472      3200
 2473              	.LASF5:
 2474 00cd 6C6F6E67 		.ascii	"long int\000"
 2474      20696E74 
 2474      00
 2475              	.LASF55:
 2476 00d6 4144435F 		.ascii	"ADC_SAR_2_offset\000"
 2476      5341525F 
 2476      325F6F66 
 2476      66736574 
 2476      00
 2477              	.LASF51:
 2478 00e7 4144435F 		.ascii	"ADC_SAR_2_CountsTo_uVolts\000"
 2478      5341525F 
 2478      325F436F 
 2478      756E7473 
 2478      546F5F75 
 2479              	.LASF22:
 2480 0101 72656731 		.ascii	"reg16\000"
 2480      3600
 2481              	.LASF11:
 2482 0107 75696E74 		.ascii	"uint8\000"
 2482      3800
 2483              	.LASF60:
 2484 010d 43794465 		.ascii	"CyDelayUs\000"
 2484      6C617955 
 2484      7300
 2485              	.LASF19:
 2486 0117 646F7562 		.ascii	"double\000"
 2486      6C6500
 2487              	.LASF13:
 2488 011e 75696E74 		.ascii	"uint32\000"
 2488      333200
 2489              	.LASF50:
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 62


 2490 0125 636F756E 		.ascii	"countsPer10Volt\000"
 2490      74735065 
 2490      72313056 
 2490      6F6C7400 
 2491              	.LASF64:
 2492 0135 4379496E 		.ascii	"CyIntSetVector\000"
 2492      74536574 
 2492      56656374 
 2492      6F7200
 2493              	.LASF52:
 2494 0144 4144435F 		.ascii	"ADC_SAR_2_CountsTo_Volts\000"
 2494      5341525F 
 2494      325F436F 
 2494      756E7473 
 2494      546F5F56 
 2495              	.LASF38:
 2496 015d 7265744D 		.ascii	"retMode\000"
 2496      6F646500 
 2497              	.LASF0:
 2498 0165 756E7369 		.ascii	"unsigned int\000"
 2498      676E6564 
 2498      20696E74 
 2498      00
 2499              	.LASF33:
 2500 0172 4144435F 		.ascii	"ADC_SAR_2_SetResolution\000"
 2500      5341525F 
 2500      325F5365 
 2500      74526573 
 2500      6F6C7574 
 2501              	.LASF70:
 2502 018a 75566F6C 		.ascii	"uVolts\000"
 2502      747300
 2503              	.LASF6:
 2504 0191 6C6F6E67 		.ascii	"long unsigned int\000"
 2504      20756E73 
 2504      69676E65 
 2504      6420696E 
 2504      7400
 2505              	.LASF53:
 2506 01a3 766F6C74 		.ascii	"volts\000"
 2506      7300
 2507              	.LASF71:
 2508 01a9 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2508      74657243 
 2508      72697469 
 2508      63616C53 
 2508      65637469 
 2509              	.LASF37:
 2510 01c0 4144435F 		.ascii	"ADC_SAR_2_StopConvert\000"
 2510      5341525F 
 2510      325F5374 
 2510      6F70436F 
 2510      6E766572 
 2511              	.LASF69:
 2512 01d6 4144435F 		.ascii	"ADC_SAR_2_GetResult8\000"
 2512      5341525F 
 2512      325F4765 
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 63


 2512      74526573 
 2512      756C7438 
 2513              	.LASF4:
 2514 01eb 73686F72 		.ascii	"short unsigned int\000"
 2514      7420756E 
 2514      7369676E 
 2514      65642069 
 2514      6E7400
 2515              	.LASF14:
 2516 01fe 696E7438 		.ascii	"int8\000"
 2516      00
 2517              	.LASF66:
 2518 0203 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\ADC_SAR_2.c\000"
 2518      6E657261 
 2518      7465645F 
 2518      536F7572 
 2518      63655C50 
 2519              	.LASF49:
 2520 0228 6D566F6C 		.ascii	"mVolts\000"
 2520      747300
 2521              	.LASF23:
 2522 022f 72656733 		.ascii	"reg32\000"
 2522      3200
 2523              	.LASF58:
 2524 0235 4144435F 		.ascii	"ADC_SAR_2_shift\000"
 2524      5341525F 
 2524      325F7368 
 2524      69667400 
 2525              	.LASF17:
 2526 0245 666C6F61 		.ascii	"float32\000"
 2526      74333200 
 2527              	.LASF9:
 2528 024d 73697A65 		.ascii	"sizetype\000"
 2528      74797065 
 2528      00
 2529              	.LASF34:
 2530 0256 4144435F 		.ascii	"ADC_SAR_2_Init\000"
 2530      5341525F 
 2530      325F496E 
 2530      697400
 2531              	.LASF40:
 2532 0265 4144435F 		.ascii	"ADC_SAR_2_IsEndConversion\000"
 2532      5341525F 
 2532      325F4973 
 2532      456E6443 
 2532      6F6E7665 
 2533              	.LASF20:
 2534 027f 696E7436 		.ascii	"int64\000"
 2534      3400
 2535              	.LASF46:
 2536 0285 4144435F 		.ascii	"ADC_SAR_2_SetScaledGain\000"
 2536      5341525F 
 2536      325F5365 
 2536      74536361 
 2536      6C656447 
 2537              	.LASF63:
 2538 029d 4379496E 		.ascii	"CyIntSetPriority\000"
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 64


 2538      74536574 
 2538      5072696F 
 2538      72697479 
 2538      00
 2539              	.LASF18:
 2540 02ae 666C6F61 		.ascii	"float\000"
 2540      7400
 2541              	.LASF32:
 2542 02b4 706F7765 		.ascii	"power\000"
 2542      7200
 2543              	.LASF47:
 2544 02ba 4144435F 		.ascii	"ADC_SAR_2_CountsTo_mVolts\000"
 2544      5341525F 
 2544      325F436F 
 2544      756E7473 
 2544      546F5F6D 
 2545              	.LASF21:
 2546 02d4 72656738 		.ascii	"reg8\000"
 2546      00
 2547              	.LASF59:
 2548 02d9 43794861 		.ascii	"CyHalt\000"
 2548      6C7400
 2549              	.LASF2:
 2550 02e0 756E7369 		.ascii	"unsigned char\000"
 2550      676E6564 
 2550      20636861 
 2550      7200
 2551              	.LASF3:
 2552 02ee 73686F72 		.ascii	"short int\000"
 2552      7420696E 
 2552      7400
 2553              	.LASF67:
 2554 02f8 443A5C4D 		.ascii	"D:\\MyPSoC\\HNP3_ECB_WS\\Basic_Setup.cydsn\000"
 2554      7950536F 
 2554      435C484E 
 2554      50335F45 
 2554      43425F57 
 2555              	.LASF31:
 2556 0320 7265736F 		.ascii	"resolution\000"
 2556      6C757469 
 2556      6F6E00
 2557              	.LASF10:
 2558 032b 63686172 		.ascii	"char\000"
 2558      00
 2559              	.LASF24:
 2560 0330 63796973 		.ascii	"cyisraddress\000"
 2560      72616464 
 2560      72657373 
 2560      00
 2561              	.LASF36:
 2562 033d 4144435F 		.ascii	"ADC_SAR_2_StartConvert\000"
 2562      5341525F 
 2562      325F5374 
 2562      61727443 
 2562      6F6E7665 
 2563              	.LASF28:
 2564 0354 4144435F 		.ascii	"ADC_SAR_2_Enable\000"
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 65


 2564      5341525F 
 2564      325F456E 
 2564      61626C65 
 2564      00
 2565              	.LASF43:
 2566 0365 6F666673 		.ascii	"offset\000"
 2566      657400
 2567              	.LASF62:
 2568 036c 4144435F 		.ascii	"ADC_SAR_2_theACLK_SetModeRegister\000"
 2568      5341525F 
 2568      325F7468 
 2568      6541434C 
 2568      4B5F5365 
 2569              	.LASF48:
 2570 038e 61646343 		.ascii	"adcCounts\000"
 2570      6F756E74 
 2570      7300
 2571              	.LASF27:
 2572 0398 656E6162 		.ascii	"enableInterrupts\000"
 2572      6C65496E 
 2572      74657272 
 2572      75707473 
 2572      00
 2573              	.LASF39:
 2574 03a9 73746174 		.ascii	"status\000"
 2574      757300
 2575              	.LASF65:
 2576 03b0 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2576      4320342E 
 2576      392E3320 
 2576      32303135 
 2576      30333033 
 2577 03e3 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2577      20726576 
 2577      6973696F 
 2577      6E203232 
 2577      31323230 
 2578 0416 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2578      66756E63 
 2578      74696F6E 
 2578      2D736563 
 2578      74696F6E 
 2579              	.LASF57:
 2580 043e 4144435F 		.ascii	"ADC_SAR_2_countsPer10Volt\000"
 2580      5341525F 
 2580      325F636F 
 2580      756E7473 
 2580      50657231 
 2581              	.LASF30:
 2582 0458 4144435F 		.ascii	"ADC_SAR_2_SetPower\000"
 2582      5341525F 
 2582      325F5365 
 2582      74506F77 
 2582      657200
 2583              	.LASF15:
 2584 046b 696E7431 		.ascii	"int16\000"
 2584      3600
ARM GAS  C:\Users\lilu1\AppData\Local\Temp\ccJDXxzB.s 			page 66


 2585              	.LASF41:
 2586 0471 4144435F 		.ascii	"ADC_SAR_2_GetResult16\000"
 2586      5341525F 
 2586      325F4765 
 2586      74526573 
 2586      756C7431 
 2587              	.LASF26:
 2588 0487 746D7052 		.ascii	"tmpReg\000"
 2588      656700
 2589              	.LASF56:
 2590 048e 4144435F 		.ascii	"ADC_SAR_2_countsPerVolt\000"
 2590      5341525F 
 2590      325F636F 
 2590      756E7473 
 2590      50657256 
 2591              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
